var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.397,1,2.423]],["body/controllers/AppController.html",[0,2.377,1,4.122,2,2.133,3,0.378,4,0.328,5,0.28,6,3.907,7,0.49,8,0.029,9,1.005,10,3.953,11,4.648,12,4.648,13,1.826,14,4.648,15,0.378,16,0.055,17,2.764,18,3.055,19,0.024,20,0.024]],["title/modules/AppModule.html",[21,1.2,22,2.164]],["body/modules/AppModule.html",[3,0.264,4,0.229,5,0.195,7,0.501,8,0.029,9,0.701,15,0.264,16,0.039,19,0.019,20,0.019,21,1.848,22,4.222,23,1.488,24,1.488,25,1.76,26,1.76,27,1.488,28,2.411,29,1.76,30,2.726,31,2.726,32,3.2,33,3.2,34,3.507,35,2.936,36,2.411,37,1.76,38,1.488,39,3.243,40,2.92,41,2.726,42,4.443,43,2.132,44,2.132,45,1.376,46,3.243,47,2.726,48,2.726,49,2.726,50,2.132,51,2.386,52,3.243,53,3.243,54,2.75,55,3.243,56,3.243,57,3.243,58,3.735,59,3.735,60,1.885,61,0.417,62,2.726,63,2.726,64,3.243,65,2.726,66,2.726,67,2.726,68,3.243,69,2.726,70,2.386,71,3.243,72,2.726,73,2.386,74,2.726]],["title/injectables/AppService.html",[10,2.164,75,0.769]],["body/injectables/AppService.html",[3,0.404,4,0.35,5,0.299,7,0.404,8,0.028,9,1.072,10,3.827,15,0.404,16,0.059,19,0.025,20,0.025,75,1.36,76,2.103,77,4.167]],["title/entities/Auction.html",[78,1.64,79,1.036]],["body/entities/Auction.html",[3,0.269,4,0.233,5,0.199,7,0.417,8,0.029,15,0.269,16,0.039,19,0.019,20,0.019,61,0.78,78,2.24,79,1.415,80,1.964,81,2.776,82,0.425,83,1.221,84,3.042,85,2.776,86,3.042,87,2.17,88,1.389,89,3.763,90,3.362,91,2.33,92,1.909,93,4.201,94,1.028,95,3.302,96,1.185,97,3.302,98,2.064,99,3.302,100,1.515,101,1.515,102,3.042,103,3.309,104,3.309,105,3.309,106,3.302,107,3.302,108,1.865,109,2.776,110,3.309,111,3.302,112,3.302,113,2.429,114,3.781,115,1.204,116,2.429,117,1.792]],["title/classes/AuctionFiltersDto.html",[16,0.039,118,1.787]],["body/classes/AuctionFiltersDto.html",[3,0.281,4,0.244,5,0.208,7,0.377,8,0.029,13,1.354,15,0.377,16,0.062,19,0.02,20,0.02,61,0.719,79,1.084,82,0.443,83,1.257,84,2.049,85,2.512,86,2.049,88,0.935,90,2.265,91,2.547,92,1.758,94,0.947,96,1.117,98,1.581,118,2.512,119,1.462,120,2.535,121,4.395,122,4.395,123,3.846,124,4.395,125,3.892,126,3.446,127,3.446,128,4.63,129,3.446,130,3.446,131,5.048,132,3.446,133,3.468,134,3.109,135,4.29,136,3.892,137,3.892,138,1.716,139,1.87,140,2.565,141,1.87,142,2.535,143,1.256,144,2.897,145,2.897,146,2.897,147,2.897]],["title/controllers/AuctionsController.html",[0,1.397,148,2.164]],["body/controllers/AuctionsController.html",[0,1.137,2,1.23,3,0.218,4,0.189,5,0.162,7,0.477,8,0.029,9,0.58,13,1.053,15,0.218,16,0.032,17,1.594,19,0.016,20,0.016,54,2.718,61,0.736,79,0.843,82,0.345,87,1.647,88,1.443,91,2.572,92,1.437,94,0.774,96,1.108,100,1.23,101,1.23,115,0.977,118,2.718,139,2.718,140,2.299,141,2.478,143,1.416,148,2.553,149,2.253,150,1.972,151,2.68,152,1.315,153,3.265,154,3.884,155,3.84,156,2.253,157,3.292,158,2.68,159,2.68,160,1.547,161,1.547,162,2.107,163,1.547,164,2.68,165,3.884,166,2.68,167,2.253,168,4.207,169,4.207,170,2.68,171,3.685,172,2.253,173,2.857,174,2.68,175,3.265,176,3.265,177,2.107,178,1.972,179,1.972,180,2.253,181,3.265,182,1.972,183,2.68,184,4.568,185,2.478,186,2.253,187,2.253,188,1.454,189,1.972,190,1.972,191,1.762,192,2.253,193,2.253,194,2.857,195,3.84,196,1.972,197,1.594,198,1.762,199,1.972,200,2.68,201,2.68,202,1.972,203,2.68,204,2.253,205,1.665,206,2.68,207,2.68,208,2.68,209,2.68,210,2.68,211,2.68,212,2.68,213,2.68]],["title/modules/AuctionsModule.html",[21,1.2,32,1.787]],["body/modules/AuctionsModule.html",[2,2.193,3,0.294,4,0.255,5,0.218,7,0.513,8,0.029,9,0.781,15,0.294,16,0.043,19,0.02,20,0.02,21,1.952,23,1.658,24,1.658,25,1.96,26,1.96,27,1.658,28,2.905,29,2.905,32,3.46,33,2.592,35,3.031,36,2.592,37,1.96,38,1.658,40,3.141,44,2.375,45,1.533,48,3.037,51,2.658,79,1.137,108,1.503,116,2.658,148,3.519,185,3.545,186,3.037,199,2.658,214,3.037,215,3.613,216,3.037,217,3.037,218,3.613,219,4.017,220,3.613,221,3.613]],["title/injectables/AuctionsService.html",[75,0.769,185,1.787]],["body/injectables/AuctionsService.html",[3,0.191,4,0.166,5,0.142,7,0.47,8,0.029,9,0.509,15,0.191,16,0.028,19,0.015,20,0.015,45,0.997,60,2.564,61,0.648,75,0.824,76,0.997,79,1.664,82,0.302,84,1.398,86,2.517,87,1.995,88,1.367,89,2.595,94,0.853,96,1.153,98,1.618,115,1.286,118,2.551,123,2.595,139,2.551,143,1.543,152,1.194,153,2.965,155,3.558,156,2.965,157,3.091,160,1.706,161,1.706,162,1.914,163,1.592,167,1.977,175,2.965,177,3.061,185,1.914,187,1.977,196,1.73,197,1.398,198,2.318,199,1.73,205,1.543,222,1.977,223,3.527,224,3.527,225,1.914,226,2.352,227,2.796,228,2.731,229,2.731,230,2.352,231,2.965,232,2.352,233,3.527,234,2.352,235,3.527,236,2.352,237,3.953,238,3.953,239,2.352,240,1.977,241,1.546,242,1.977,243,2.352,244,0.997,245,1.977,246,1.977,247,2.296,248,2.244,249,2.352,250,2.352,251,2.352,252,2.312,253,1.977,254,1.977,255,1.398,256,1.977,257,1.546,258,2.965,259,2.352,260,3.527,261,3.527,262,2.352,263,2.965,264,2.352,265,2.352,266,2.352,267,3.558,268,2.352,269,2.352]],["title/entities/Bid.html",[78,1.64,244,1.397]],["body/entities/Bid.html",[3,0.278,4,0.242,5,0.206,7,0.454,8,0.029,15,0.278,16,0.041,19,0.02,20,0.02,61,0.748,78,2.293,79,1.984,80,2.033,82,0.44,83,1.25,87,2.209,91,1.953,92,1.829,93,3.822,94,0.985,96,0.92,98,2.113,100,1.568,101,1.568,102,3.096,103,3.387,104,3.387,105,3.387,108,1.884,109,3.871,110,3.387,113,2.515,114,4.377,115,1.246,116,2.515,117,1.855,244,1.953,270,2.873,271,3.422,272,4.377,273,4.377,274,3.418,275,4.605,276,3.418,277,3.418,278,3.418,279,3.418,280,2.515]],["title/controllers/BidsController.html",[0,1.397,281,2.164]],["body/controllers/BidsController.html",[0,1.144,2,1.238,3,0.22,4,0.191,5,0.163,7,0.467,8,0.029,9,0.583,13,1.06,15,0.22,16,0.032,17,1.604,19,0.017,20,0.017,54,3.184,61,0.791,82,0.347,88,1.555,91,2.489,92,1.442,94,0.776,96,1.195,140,2.692,141,2.117,150,1.984,152,1.321,157,3.652,160,1.552,161,1.552,162,2.117,163,1.552,168,3.696,169,3.696,171,4.317,172,3.28,173,3.696,178,1.984,179,1.984,180,2.267,181,3.28,182,1.984,188,1.463,189,1.984,190,1.984,191,1.773,192,2.267,193,2.267,194,2.871,195,4.481,202,1.984,204,2.267,205,1.671,228,1.943,281,2.565,282,2.267,283,2.697,284,3.28,285,3.854,286,3.28,287,2.267,288,2.697,289,2.697,290,2.32,291,2.267,292,5.024,293,3.302,294,2.697,295,2.697,296,2.267,297,2.988,298,2.697,299,2.697,300,2.267,301,2.267,302,2.697,303,2.697,304,2.697,305,2.697,306,2.697,307,2.697,308,2.697,309,2.697,310,2.697,311,2.697,312,2.697,313,2.697]],["title/injectables/BidsGateway.html",[75,0.769,229,1.64]],["body/injectables/BidsGateway.html",[3,0.128,4,0.111,5,0.095,7,0.338,8,0.029,9,0.339,15,0.128,16,0.019,17,0.933,18,1.031,19,0.011,20,0.011,54,1.392,60,2.316,61,0.702,75,0.599,76,0.665,79,1.718,82,0.202,83,0.696,88,1.379,91,1.76,92,1.024,94,0.925,96,1.143,98,1.177,100,1.177,101,1.177,143,1.851,152,0.869,160,1.719,161,1.719,163,1.661,205,0.935,225,0.851,229,1.277,244,1.76,245,1.318,247,2.755,248,1.088,252,1.177,267,3.163,290,3.679,314,1.318,315,3.763,316,3.256,317,3.953,318,2.566,319,2.566,320,2.566,321,3.256,322,3.256,323,2.566,324,2.566,325,2.566,326,1.568,327,2.041,328,2.566,329,2.157,330,2.566,331,1.568,332,3.163,333,2.566,334,5.557,335,1.568,336,5.461,337,2.566,338,1.568,339,1.568,340,2.566,341,1.568,342,1.888,343,1.568,344,2.566,345,1.568,346,2.566,347,1.568,348,2.157,349,2.566,350,1.568,351,2.566,352,4.15,353,1.568,354,3.763,355,1.568,356,3.745,357,1.568,358,3.256,359,2.566,360,1.568,361,3.256,362,2.566,363,2.566,364,3.256,365,2.566,366,1.318,367,1.318,368,1.318,369,1.568,370,1.568,371,1.031,372,1.154,373,1.568,374,1.568,375,1.568,376,1.568,377,1.568,378,4.15,379,1.568,380,2.566,381,1.568,382,1.568,383,1.568,384,2.566,385,1.154,386,1.154,387,1.154,388,1.154,389,1.031,390,1.154,391,1.154,392,1.154,393,1.568,394,1.568,395,1.568,396,3.256,397,1.568,398,4.455,399,2.566,400,1.568,401,1.568,402,1.568,403,1.568,404,1.568,405,1.568,406,2.566,407,5.079,408,3.763,409,1.568,410,3.163,411,2.566,412,2.566,413,2.566,414,1.568,415,3.256,416,3.256,417,1.686,418,2.566,419,1.568,420,1.568,421,1.568,422,1.568,423,2.566,424,1.888,425,1.568,426,1.568,427,1.568,428,1.568,429,1.568,430,1.568,431,2.566,432,2.566,433,2.157,434,1.568,435,2.566,436,1.568,437,1.888,438,1.568,439,3.256,440,2.566,441,1.568,442,1.568,443,1.568,444,1.568]],["title/modules/BidsModule.html",[21,1.2,33,1.787]],["body/modules/BidsModule.html",[2,2.193,3,0.294,4,0.255,5,0.218,7,0.513,8,0.029,9,0.781,15,0.294,16,0.043,19,0.02,20,0.02,21,1.952,23,1.658,24,1.658,25,1.96,26,1.96,27,1.658,28,2.905,29,2.905,32,2.592,33,3.46,35,3.031,36,2.592,37,1.96,38,1.658,40,3.141,44,2.375,45,1.533,47,3.037,51,2.658,79,1.503,219,4.017,228,3.253,244,1.533,280,2.658,281,3.519,300,3.037,445,3.037,446,3.037,447,3.037,448,3.613,449,3.613,450,3.613,451,3.037,452,3.613]],["title/injectables/BidsService.html",[75,0.769,228,1.64]],["body/injectables/BidsService.html",[3,0.188,4,0.163,5,0.139,7,0.468,8,0.029,9,0.499,15,0.188,16,0.028,18,2.751,19,0.015,20,0.015,45,0.979,60,2.608,61,0.676,75,0.813,76,0.979,79,1.715,82,0.297,87,1.775,88,1.426,89,1.698,94,0.89,96,1.229,102,1.373,115,1.268,117,1.253,143,0.842,152,1.178,157,3.453,160,1.778,161,1.778,162,1.253,163,1.692,177,3.115,196,1.698,197,1.373,198,2.286,205,1.698,225,1.887,227,3.242,228,1.732,229,2.715,231,3.519,237,3.519,238,3.519,240,1.941,241,1.517,242,1.941,244,0.979,246,1.941,247,2.85,248,1.775,252,1.596,253,1.941,254,3.519,255,1.373,256,1.941,257,1.517,258,1.941,271,2.286,272,2.924,280,1.698,284,2.924,285,2.924,286,2.924,287,2.924,290,3.124,291,1.941,296,2.924,297,2.771,301,1.941,451,1.941,453,1.941,454,3.479,455,3.479,456,2.309,457,2.309,458,3.479,459,2.309,460,2.309,461,3.479,462,2.309,463,2.309,464,3.479,465,2.309,466,1.941,467,2.309,468,2.309,469,2.309,470,2.309,471,2.309,472,2.309,473,2.309,474,4.186,475,2.309,476,2.309,477,3.479,478,2.309]],["title/classes/CreateAuctionDto.html",[16,0.039,139,1.787]],["body/classes/CreateAuctionDto.html",[3,0.27,4,0.234,5,0.2,7,0.367,8,0.029,13,1.301,15,0.367,16,0.061,19,0.019,20,0.019,61,0.74,79,1.417,82,0.426,83,1.223,84,3.046,85,2.983,86,3.046,88,1.39,90,3.367,91,2.517,92,1.809,94,0.974,96,1.149,98,2.068,118,1.796,119,1.404,120,2.436,121,2.783,122,2.783,123,2.436,124,2.783,125,2.783,131,4.835,133,3.421,134,3.046,135,4.366,136,3.788,137,3.788,138,1.649,139,2.445,140,2.523,141,1.796,142,2.436,143,1.207,144,2.783,145,2.783,146,2.783,147,2.783,479,3.311,480,3.614,481,3.311,482,3.311,483,3.311,484,3.311,485,3.311,486,3.311,487,2.783,488,3.311]],["title/injectables/CustomLoggerService.html",[75,0.769,327,1.787]],["body/injectables/CustomLoggerService.html",[3,0.224,4,0.194,5,0.166,7,0.377,8,0.029,9,0.595,15,0.224,16,0.033,19,0.017,20,0.017,61,0.719,75,0.924,76,1.166,82,0.354,83,1.074,88,1.458,94,0.976,96,1.345,152,1.34,160,1.818,161,1.818,163,1.818,225,2.515,247,2.515,327,2.147,329,4.702,332,4.515,371,1.807,372,4.812,424,3.952,489,2.312,490,3.957,491,3.326,492,3.957,493,3.957,494,3.957,495,3.957,496,3.957,497,2.75,498,5.594,499,3.957,500,5.069,501,2.75,502,3.957,503,2.75,504,3.957,505,2.75,506,3.957,507,2.75,508,3.957,509,2.75,510,2.312,511,2.023,512,2.75,513,2.75,514,2.75,515,2.75,516,2.75,517,2.75,518,2.75,519,2.75]],["title/classes/InitialMigration1732649684452.html",[16,0.039,520,2.423]],["body/classes/InitialMigration1732649684452.html",[3,0.198,4,0.172,5,0.147,7,0.198,8,0.028,15,0.198,16,0.029,19,0.015,20,0.015,60,2.274,61,0.556,79,1.506,82,0.313,83,0.983,84,1.45,85,1.323,86,1.45,87,2.274,88,1.455,90,1.602,94,0.732,96,0.487,100,1.119,101,1.119,108,1.14,115,0.889,119,1.034,152,1.227,160,1.227,161,1.227,163,1.227,177,2.597,244,2.274,252,2.795,271,1.602,290,2.154,348,4.506,371,2.381,433,3.635,437,2.665,520,3.521,521,4.024,522,2.049,523,3.635,524,4.506,525,3.046,526,3.046,527,2.438,528,3.046,529,4.898,530,2.438,531,3.046,532,2.438,533,4.898,534,4.324,535,4.481,536,6.017,537,5.361,538,4.529,539,1.45,540,5.115,541,1.323,542,1.45,543,1.793,544,5.826,545,2.438,546,4.324,547,4.506,548,4.324,549,3.623,550,2.438,551,3.623,552,2.438,553,4.506,554,3.635,555,3.623,556,4.324,557,4.324,558,3.623,559,3.635,560,3.623,561,2.438,562,3.623,563,3.635,564,4.324]],["title/injectables/JwtAuthGuard.html",[75,0.769,188,1.787]],["body/injectables/JwtAuthGuard.html",[3,0.452,4,0.239,5,0.204,7,0.372,8,0.029,9,0.731,15,0.275,16,0.04,19,0.019,20,0.019,61,0.588,75,1.068,76,1.434,82,0.435,88,1.241,94,0.774,108,1.822,141,1.835,143,1.888,152,1.548,160,1.548,161,1.548,163,1.548,171,2.488,188,2.48,205,1.666,248,2.197,255,3.079,257,3.005,372,2.488,385,2.488,386,2.488,387,2.488,388,2.488,389,2.223,390,2.488,391,2.488,392,2.488,417,2.223,565,4.353,566,2.843,567,3.843,568,4.571,569,4.571,570,4.571,571,4.571,572,4.663,573,3.382,574,4.571,575,3.382,576,5.178,577,3.363,578,3.382,579,2.223,580,3.382,581,3.843,582,4.571,583,3.382,584,4.571,585,3.646,586,2.843,587,3.382,588,3.382,589,3.382,590,3.382]],["title/injectables/JwtStrategy.html",[75,0.769,591,1.958]],["body/injectables/JwtStrategy.html",[3,0.264,4,0.229,5,0.195,7,0.492,8,0.029,9,0.701,15,0.264,16,0.039,19,0.019,20,0.019,42,4.339,43,2.132,45,1.376,60,2.15,61,0.571,75,1.038,76,1.376,82,0.417,87,1.885,88,1.206,94,0.752,108,1.715,115,1.182,141,1.76,143,1.182,152,1.504,160,1.504,161,1.504,163,1.098,205,1.848,225,2.411,227,3.242,241,2.132,247,1.76,248,2.312,252,1.488,255,1.929,342,2.386,538,3.269,567,3.735,577,3.269,579,2.132,581,3.735,585,2.92,586,2.726,591,2.642,592,2.726,593,4.443,594,4.443,595,3.243,596,4.26,597,3.243,598,4.443,599,3.243,600,3.735,601,3.243,602,3.243,603,2.726,604,2.386,605,2.386,606,2.726,607,3.243,608,3.243,609,2.726,610,3.243,611,3.243,612,2.726,613,2.726,614,2.726]],["title/classes/LoginUserDto.html",[16,0.039,615,1.787]],["body/classes/LoginUserDto.html",[3,0.315,4,0.273,5,0.233,7,0.407,8,0.029,13,1.52,15,0.407,16,0.066,19,0.021,20,0.021,61,0.642,82,0.497,83,1.356,92,1.571,94,0.846,96,1.261,119,1.64,133,3.687,134,3.601,138,1.925,140,2.778,480,3.283,539,2.3,541,3.173,542,3.478,615,2.71,616,2.845,617,3.867,618,3.867,619,3.251,620,3.867,621,4.199,622,2.098,623,3.251,624,4.199,625,4.199]],["title/classes/Migrations1733386120063.html",[16,0.039,626,2.423]],["body/classes/Migrations1733386120063.html",[3,0.279,4,0.242,5,0.207,7,0.279,8,0.028,15,0.279,16,0.041,19,0.02,20,0.02,60,2.543,61,0.671,82,0.441,83,1.252,88,1.58,93,3.032,94,0.883,96,0.685,100,1.573,101,1.573,115,1.25,119,1.454,152,1.562,160,1.562,161,1.562,163,1.562,177,3.026,244,2.366,252,2.559,263,2.881,273,4.689,356,3.878,371,3.032,437,2.521,523,4.383,524,5.04,525,3.878,526,3.878,528,3.878,529,5.305,531,3.878,533,2.881,535,3.836,538,2.521,553,3.878,554,2.881,563,2.881,626,4.103,627,4.689,628,2.881,629,3.427,630,3.427,631,3.427,632,4.613,633,3.427]],["title/classes/PaginationOptionsDto.html",[16,0.039,293,2.164]],["body/classes/PaginationOptionsDto.html",[3,0.343,4,0.298,5,0.254,7,0.43,8,0.029,15,0.343,16,0.069,19,0.022,20,0.022,61,0.799,82,0.542,83,1.432,91,2.689,92,1.66,94,0.894,119,1.788,138,2.099,168,4.237,169,4.237,293,3.468,634,3.543,635,5.276,636,4.215,637,4.215,638,3.543,639,5.76,640,4.215,641,5.276]],["title/classes/PlaceBidDto.html",[16,0.039,297,1.958]],["body/classes/PlaceBidDto.html",[3,0.342,4,0.297,5,0.253,7,0.429,8,0.029,13,1.651,15,0.342,16,0.063,19,0.022,20,0.022,61,0.677,82,0.54,83,1.429,91,2.233,92,1.656,94,0.892,96,1.052,119,1.782,133,3.42,134,3.131,135,3.873,138,2.092,140,2.416,142,3.09,271,3.78,290,3.42,297,3.131,480,3.461,487,3.531,642,3.531,643,4.201,644,4.201,645,4.201,646,4.201]],["title/classes/RegisterUserDto.html",[16,0.039,622,1.787]],["body/classes/RegisterUserDto.html",[3,0.305,4,0.264,5,0.225,7,0.398,8,0.029,13,1.47,15,0.398,16,0.065,19,0.021,20,0.021,61,0.7,82,0.481,83,1.327,92,1.713,94,0.922,96,1.269,119,1.587,133,3.655,134,3.563,138,1.863,140,2.749,480,3.579,539,3.238,541,3.133,542,3.434,615,2.03,616,2.752,619,3.145,621,4.11,622,2.653,623,3.145,624,4.11,625,4.11,647,3.741,648,3.741,649,3.741,650,3.741,651,3.741]],["title/entities/User.html",[78,1.64,108,1.036]],["body/entities/User.html",[3,0.3,4,0.261,5,0.222,7,0.394,8,0.029,15,0.3,16,0.044,19,0.021,20,0.021,61,0.767,78,2.411,80,2.193,82,0.474,83,1.314,87,2.293,92,1.876,93,4.208,94,1.01,96,1.265,98,2.222,100,1.692,101,1.692,102,3.215,103,3.562,104,3.562,105,3.562,108,1.523,113,2.712,115,1.344,117,2,539,3.215,541,2.934,542,3.215,543,3.978,652,3.099,653,3.687,654,3.687,655,3.687,656,3.687,657,3.687]],["title/controllers/UsersController.html",[0,1.397,658,2.164]],["body/controllers/UsersController.html",[0,1.239,2,1.34,3,0.238,4,0.206,5,0.176,7,0.448,8,0.029,9,0.632,13,1.148,15,0.238,16,0.035,17,1.737,18,1.92,19,0.018,20,0.018,38,1.34,60,2.698,61,0.531,82,0.376,88,1.301,92,1.639,94,0.882,96,0.584,108,1.299,150,2.149,152,1.399,160,1.623,161,1.623,162,2.827,163,1.764,178,2.149,179,2.149,182,2.149,188,1.585,189,2.149,190,2.149,194,3.526,202,3.039,205,2.004,248,1.752,252,1.896,342,3.833,417,1.92,424,2.149,541,1.585,559,2.456,585,3.15,609,3.473,615,2.827,622,2.827,658,2.715,659,2.456,660,2.921,661,4.131,662,3.473,663,4.38,664,3.473,665,2.921,666,2.921,667,2.921,668,2.456,669,4.131,670,2.921,671,2.921,672,2.921,673,2.456,674,4.131,675,2.921,676,2.6,677,2.456,678,2.456,679,2.921,680,2.921,681,2.921,682,2.921,683,2.921,684,2.921,685,2.921,686,2.921,687,2.921,688,2.921,689,2.921,690,2.456,691,2.921,692,2.921,693,2.921]],["title/modules/UsersModule.html",[21,1.2,34,1.958]],["body/modules/UsersModule.html",[2,2.046,3,0.265,4,0.23,5,0.196,7,0.509,8,0.029,9,0.705,15,0.265,16,0.039,19,0.019,20,0.019,21,1.852,23,1.496,24,1.496,25,1.769,26,1.769,27,1.496,28,2.757,29,2.757,34,3.757,36,2.419,37,1.769,38,1.496,40,2.93,41,4.272,42,4.019,43,2.143,44,2.143,45,1.383,49,2.74,50,2.143,58,2.74,59,2.74,69,2.74,70,3.28,72,2.74,73,2.398,74,2.74,108,1.025,205,1.188,248,1.383,579,2.143,591,3.823,604,2.398,605,2.398,612,2.74,658,3.34,676,3.488,677,2.74,694,2.74,695,2.74,696,2.74,697,3.26,698,4.459,699,3.26,700,3.26,701,3.26,702,3.26,703,3.26]],["title/injectables/UsersService.html",[75,0.769,676,1.787]],["body/injectables/UsersService.html",[3,0.154,4,0.134,5,0.114,7,0.451,8,0.029,9,0.41,15,0.154,16,0.023,19,0.013,20,0.013,45,0.803,50,1.245,54,2.276,60,2.473,61,0.587,70,3.087,73,1.394,75,0.698,76,0.803,82,0.244,87,1.78,88,1.239,94,0.773,96,0.838,98,0.869,102,1.776,108,1.778,110,1.394,115,0.691,117,1.028,143,1.851,152,1.011,160,1.546,161,1.546,162,2.006,163,1.42,173,1.394,177,2.937,205,1.664,225,1.62,227,2.495,241,1.245,247,2.006,248,2.473,252,2.414,255,2.885,257,1.963,385,1.394,386,1.394,387,1.394,388,1.394,389,1.245,390,1.394,391,1.394,392,1.394,466,1.592,491,1.592,539,2.198,541,3.118,542,1.126,543,2.197,577,2.197,585,3.001,596,2.51,600,1.592,605,1.394,606,1.592,613,1.592,614,3.527,615,2.276,622,2.276,662,2.51,663,2.51,664,2.51,668,2.51,673,2.51,676,1.62,678,1.592,690,1.592,704,1.592,705,2.986,706,1.894,707,5.077,708,1.894,709,2.986,710,1.894,711,1.894,712,2.986,713,4.566,714,1.894,715,1.894,716,1.592,717,1.592,718,1.592,719,3.697,720,1.894,721,2.986,722,2.986,723,1.894,724,1.894,725,1.894,726,2.986,727,1.894,728,1.894,729,2.986,730,2.986,731,1.894,732,2.986,733,2.986,734,1.894,735,1.894,736,1.894,737,1.894,738,1.894,739,1.894,740,1.894,741,3.697,742,1.894,743,2.986,744,2.986,745,1.894,746,1.894,747,1.894,748,1.894]],["title/modules/WebsocketsModule.html",[21,1.2,35,1.64]],["body/modules/WebsocketsModule.html",[3,0.332,4,0.288,5,0.246,7,0.462,8,0.028,9,0.882,15,0.332,16,0.049,19,0.022,20,0.022,21,2.068,23,1.872,24,1.872,25,2.213,26,2.213,27,1.872,28,3.078,29,3.078,35,3.248,36,2.804,37,2.213,38,1.872,229,3.31,327,3.412,368,3.429,749,3.429,750,3.429,751,3.429,752,4.079,753,4.079]],["title/coverage.html",[754,3.303]],["body/coverage.html",[0,2.238,1,2.21,5,0.181,6,2.526,8,0.029,10,1.975,16,0.072,19,0.018,20,0.018,27,1.379,61,0.386,75,1.41,77,2.526,78,2.423,79,0.945,81,2.526,108,0.945,118,1.63,120,3.1,139,1.63,143,1.095,148,1.975,149,2.526,185,1.63,188,1.63,191,1.975,222,2.526,228,1.496,229,1.496,244,1.274,270,2.526,281,1.975,282,2.526,293,1.975,297,1.787,314,2.526,327,1.63,410,5.656,453,2.526,489,2.526,511,2.21,520,2.21,521,2.526,522,2.526,535,2.21,565,2.526,566,2.526,591,1.787,592,2.526,615,1.63,616,3.1,622,1.63,626,2.21,627,2.526,628,2.526,634,2.526,642,2.526,652,2.526,658,1.975,659,2.526,676,1.63,704,2.526,754,2.21,755,2.526,756,3.005,757,3.005,758,6.215,759,5.555,760,4.867,761,4.214,762,3.005,763,5.555,764,2.526,765,2.526,766,5.275,767,2.526,768,3.005,769,3.542,770,2.526,771,2.526,772,3.005,773,2.526,774,2.526,775,3.005,776,3.005]],["title/dependencies.html",[24,1.817,777,2.314]],["body/dependencies.html",[5,0.217,8,0.029,9,0.777,13,1.412,16,0.057,19,0.02,20,0.02,24,1.649,43,2.361,45,1.524,50,2.361,115,1.735,117,1.949,138,1.789,197,2.137,198,2.361,366,3.02,367,4.002,510,4.488,579,2.361,603,4.002,604,2.643,638,3.02,716,3.02,717,3.02,718,4.002,778,3.593,779,3.593,780,3.593,781,4.76,782,3.593,783,3.593,784,4.76,785,4.76,786,3.593,787,3.593,788,3.593,789,3.593,790,3.593,791,3.593,792,3.593,793,3.593,794,3.593,795,3.593,796,3.593,797,3.593,798,3.593,799,3.593,800,3.02,801,3.593,802,3.593,803,3.593,804,3.593,805,3.593,806,3.593,807,3.593,808,3.593,809,3.593,810,3.593,811,3.593,812,3.593,813,3.593,814,3.593,815,3.593,816,3.593,817,3.593,818,3.593,819,3.593,820,3.593,821,3.593,822,3.593,823,3.593,824,3.593,825,3.593]],["title/miscellaneous/functions.html",[826,1.809,827,3.328]],["body/miscellaneous/functions.html",[8,0.025,19,0.025,20,0.025,27,2.874,82,0.658,771,4.302,826,3.364,827,4.302,828,5.118]],["title/index.html",[82,0.354,829,2.752,830,2.752]],["body/index.html",[4,0.187,8,0.027,19,0.016,20,0.016,38,2.531,85,1.433,140,2.283,197,3.469,227,1.571,317,2.22,389,1.736,547,2.22,754,1.943,755,3.23,800,3.808,831,2.641,832,2.641,833,4.53,834,3.843,835,2.641,836,2.641,837,2.641,838,3.843,839,2.641,840,4.975,841,2.641,842,5.834,843,2.641,844,5.694,845,2.641,846,2.641,847,2.641,848,3.843,849,2.641,850,3.843,851,2.641,852,4.53,853,2.641,854,3.843,855,2.641,856,2.641,857,2.641,858,2.641,859,2.641,860,4.975,861,5.516,862,3.843,863,2.641,864,2.641,865,2.641,866,2.641,867,2.641,868,5.516,869,3.843,870,4.975,871,2.641,872,3.843,873,2.641,874,2.641,875,3.843,876,5.516,877,4.975,878,2.641,879,3.843,880,2.641,881,2.641,882,2.641,883,2.641,884,4.975,885,2.641,886,2.641,887,2.641,888,2.641,889,3.843,890,2.641,891,2.641,892,2.641,893,2.641,894,2.641,895,3.843,896,2.641,897,2.641,898,2.641,899,3.843,900,2.641,901,2.641,902,4.182,903,3.843,904,2.641,905,2.641,906,2.641,907,2.641,908,2.641,909,2.641,910,2.641,911,2.641,912,3.843,913,2.641,914,2.641,915,2.641,916,2.641,917,4.53,918,2.641,919,2.641,920,2.641,921,2.641,922,2.641,923,2.641,924,3.843,925,2.641,926,2.641,927,2.641,928,2.641,929,2.641,930,3.843,931,2.641,932,2.641,933,2.641,934,3.843,935,3.843,936,2.641,937,2.641,938,2.641,939,2.641,940,2.641,941,2.641,942,2.641,943,2.641,944,2.641,945,2.641,946,2.641,947,2.22,948,2.641,949,2.641,950,2.641,951,2.641,952,2.641,953,2.641,954,2.22]],["title/modules.html",[23,2.06]],["body/modules.html",[8,0.024,19,0.024,20,0.024,22,3.136,23,2.189,32,2.588,33,2.588,34,2.837,35,2.375,902,5.411,955,6.436,956,6.436,957,6.436]],["title/overview.html",[958,3.774]],["body/overview.html",[2,1.548,8,0.028,19,0.019,20,0.019,21,1.23,22,4.179,23,1.548,24,1.548,25,1.83,26,1.83,27,1.548,28,1.83,29,1.83,30,2.835,31,2.835,32,3.367,33,3.367,34,3.74,35,3.166,36,2.476,37,1.83,38,1.548,76,1.431,80,2.006,119,1.431,176,2.835,185,3.31,214,2.835,216,2.835,217,2.835,228,3.038,229,3.038,327,2.806,445,2.835,446,2.835,447,2.835,591,3.628,676,3.31,694,2.835,695,2.835,696,2.835,749,2.835,750,2.835,751,2.835,958,2.835,959,3.373,960,3.373,961,4.563]],["title/properties.html",[83,1.075,777,2.314]],["body/properties.html",[8,0.028,19,0.025,20,0.025,83,1.372,85,2.743,947,4.251,954,4.251,962,5.056,963,5.056,964,5.056]],["title/miscellaneous/variables.html",[826,1.809,965,3.328]],["body/miscellaneous/variables.html",[8,0.029,19,0.021,20,0.021,54,2.934,61,0.623,62,3.099,63,3.099,65,3.099,66,3.099,67,3.099,80,2.193,82,0.474,96,0.737,100,2.635,101,2.635,108,1.523,143,1.765,191,3.183,205,1.344,248,2.054,417,2.423,511,3.562,572,3.099,764,3.099,765,4.071,767,4.071,769,3.099,770,4.545,773,3.099,774,4.071,826,2.423,965,3.099,966,3.687,967,3.687,968,4.842,969,3.687,970,3.687,971,4.842,972,3.687,973,4.842,974,3.687,975,3.687,976,3.687,977,4.842,978,3.687,979,3.687,980,3.687,981,3.687,982,3.687,983,3.687,984,3.687,985,3.687,986,3.687,987,3.687,988,3.687,989,3.687,990,3.687,991,3.687,992,3.687]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WebsocketsModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":410,"title":{},"body":{"injectables/BidsGateway.html":{},"coverage.html":{}}}],["0.0.1",{"_index":963,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":792,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":811,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":791,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":805,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":758,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":763,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":759,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":761,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":760,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":762,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":768,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":141,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"classes/CreateAuctionDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["1'})@isstring",{"_index":485,"title":{},"body":{"classes/CreateAuctionDto.html":{}}}],["1.3.4",{"_index":799,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":795,"title":{},"body":{"dependencies.html":{}}}],["1.9.7",{"_index":801,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":173,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"injectables/UsersService.html":{}}}],["10.0.0",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":787,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["10.4.11",{"_index":785,"title":{},"body":{"dependencies.html":{}}}],["10.4.13",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["10.9.2",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":142,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{},"classes/PlaceBidDto.html":{}}}],["1000).toisostring",{"_index":147,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{}}}],["100})@isnumber",{"_index":487,"title":{},"body":{"classes/CreateAuctionDto.html":{},"classes/PlaceBidDto.html":{}}}],["16.4.5",{"_index":797,"title":{},"body":{"dependencies.html":{}}}],["1h",{"_index":734,"title":{},"body":{"injectables/UsersService.html":{}}}],["1})@apiquery({name",{"_index":172,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{}}}],["2.4.3",{"_index":790,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":145,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{}}}],["24h",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["3",{"_index":960,"title":{},"body":{"overview.html":{}}}],["3.17.0",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":105,"title":{},"body":{"entities/Auction.html":{},"entities/Bid.html":{},"entities/User.html":{}}}],["3600",{"_index":146,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{}}}],["4",{"_index":959,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":806,"title":{},"body":{"dependencies.html":{}}}],["4.0.4",{"_index":802,"title":{},"body":{"dependencies.html":{}}}],["4.8.1",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":176,"title":{},"body":{"controllers/AuctionsController.html":{},"overview.html":{}}}],["5.0.0",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":789,"title":{},"body":{"dependencies.html":{}}}],["6.9.16",{"_index":804,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":961,"title":{},"body":{"overview.html":{}}}],["8.0.7",{"_index":786,"title":{},"body":{"dependencies.html":{}}}],["8.13.1",{"_index":808,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["action",{"_index":348,"title":{},"body":{"injectables/BidsGateway.html":{},"classes/InitialMigration1732649684452.html":{}}}],["active",{"_index":121,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{}}}],["add",{"_index":554,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["afterinit",{"_index":318,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["afterinit(server",{"_index":330,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["allowing",{"_index":890,"title":{},"body":{"index.html":{}}}],["already",{"_index":724,"title":{},"body":{"injectables/UsersService.html":{}}}],["alter",{"_index":553,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["amazing",{"_index":940,"title":{},"body":{"index.html":{}}}],["amount",{"_index":271,"title":{},"body":{"entities/Bid.html":{},"injectables/BidsService.html":{},"classes/InitialMigration1732649684452.html":{},"classes/PlaceBidDto.html":{}}}],["apibearerauth",{"_index":194,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"controllers/UsersController.html":{}}}],["apiproperty",{"_index":133,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{},"classes/LoginUserDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{}}}],["apiproperty({example",{"_index":480,"title":{},"body":{"classes/CreateAuctionDto.html":{},"classes/LoginUserDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{}}}],["apiquery",{"_index":195,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{}}}],["apitags",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('v1",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["appdatasource",{"_index":767,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":861,"title":{},"body":{"index.html":{}}}],["applications",{"_index":838,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":22,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["array.from(subscribers",{"_index":382,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["array.from(this.auctionsubscriptions.entries()).map",{"_index":377,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["array.from(this.connectedclients",{"_index":376,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["async",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuctionsService.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1733386120063.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auction",{"_index":79,"title":{"entities/Auction.html":{}},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"injectables/BidsGateway.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"classes/InitialMigration1732649684452.html":{},"coverage.html":{}}}],["auction\"(\"id",{"_index":561,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["auction.enddate",{"_index":469,"title":{},"body":{"injectables/BidsService.html":{}}}],["auction.id",{"_index":275,"title":{},"body":{"entities/Bid.html":{}}}],["auctionfiltersdto",{"_index":118,"title":{"classes/AuctionFiltersDto.html":{}},"body":{"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"classes/CreateAuctionDto.html":{},"coverage.html":{}}}],["auctionid",{"_index":290,"title":{},"body":{"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"classes/InitialMigration1732649684452.html":{},"classes/PlaceBidDto.html":{}}}],["auctionrepository",{"_index":231,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{}}}],["auctions",{"_index":151,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["auctions.controller",{"_index":220,"title":{},"body":{"modules/AuctionsModule.html":{}}}],["auctions.service",{"_index":186,"title":{},"body":{"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{}}}],["auctions/auctions.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/BidsModule.html":{}}}],["auctions/entities/auction.entity",{"_index":280,"title":{},"body":{"entities/Bid.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{}}}],["auctionscontroller",{"_index":148,"title":{"controllers/AuctionsController.html":{}},"body":{"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"coverage.html":{}}}],["auctionsmodule",{"_index":32,"title":{"modules/AuctionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules.html":{},"overview.html":{}}}],["auctionsservice",{"_index":185,"title":{"injectables/AuctionsService.html":{}},"body":{"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"coverage.html":{},"overview.html":{}}}],["auctionsubscriptions",{"_index":315,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["auth.guard",{"_index":190,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":566,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:10",{"_index":573,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:31",{"_index":575,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard",{"_index":578,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":568,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authheader",{"_index":581,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["authheader.split",{"_index":586,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["author",{"_index":947,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":587,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["autoloadentities",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["await",{"_index":252,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1733386120063.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":879,"title":{},"body":{"index.html":{}}}],["backers",{"_index":941,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":466,"title":{},"body":{"injectables/BidsService.html":{},"injectables/UsersService.html":{}}}],["based",{"_index":874,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":716,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(dto.password",{"_index":745,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(dto.password",{"_index":727,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":717,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bearer",{"_index":588,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["bid",{"_index":244,"title":{"entities/Bid.html":{}},"body":{"injectables/AuctionsService.html":{},"entities/Bid.html":{},"injectables/BidsGateway.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{},"coverage.html":{}}}],["bidder",{"_index":272,"title":{},"body":{"entities/Bid.html":{},"injectables/BidsService.html":{}}}],["bidderid",{"_index":551,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["bidrepository",{"_index":458,"title":{},"body":{"injectables/BidsService.html":{}}}],["bids",{"_index":283,"title":{},"body":{"controllers/BidsController.html":{}}}],["bids.controller",{"_index":450,"title":{},"body":{"modules/BidsModule.html":{}}}],["bids.gateway",{"_index":753,"title":{},"body":{"modules/WebsocketsModule.html":{}}}],["bids.service",{"_index":300,"title":{},"body":{"controllers/BidsController.html":{},"modules/BidsModule.html":{}}}],["bids/bids.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{}}}],["bids/bids.service",{"_index":243,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["bids/entities/bid.entity",{"_index":245,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsGateway.html":{}}}],["bidscontroller",{"_index":281,"title":{"controllers/BidsController.html":{}},"body":{"controllers/BidsController.html":{},"modules/BidsModule.html":{},"coverage.html":{}}}],["bidservice",{"_index":304,"title":{},"body":{"controllers/BidsController.html":{}}}],["bidsgateway",{"_index":229,"title":{"injectables/BidsGateway.html":{}},"body":{"injectables/AuctionsService.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"modules/WebsocketsModule.html":{},"coverage.html":{},"overview.html":{}}}],["bidsmodule",{"_index":33,"title":{"modules/BidsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules.html":{},"overview.html":{}}}],["bidsservice",{"_index":228,"title":{"injectables/BidsService.html":{}},"body":{"injectables/AuctionsService.html":{},"controllers/BidsController.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"coverage.html":{},"overview.html":{}}}],["board",{"_index":933,"title":{},"body":{"index.html":{}}}],["body",{"_index":179,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":125,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{}}}],["bootstrap",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{},"modules/WebsocketsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":957,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":955,"title":{},"body":{"modules.html":{}}}],["building",{"_index":834,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":569,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":571,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["catch",{"_index":742,"title":{},"body":{"injectables/UsersService.html":{}}}],["channel",{"_index":905,"title":{},"body":{"index.html":{}}}],["character",{"_index":536,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["check",{"_index":868,"title":{},"body":{"index.html":{}}}],["class",{"_index":16,"title":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{},"classes/InitialMigration1732649684452.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WebsocketsModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":119,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{},"classes/InitialMigration1732649684452.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":889,"title":{},"body":{"index.html":{}}}],["client",{"_index":336,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["client.id",{"_index":398,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["client.join(`auction:${auctionid",{"_index":422,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["client.leave(`auction:${auctionid",{"_index":406,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["cloud",{"_index":873,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_auctionsmodule",{"_index":214,"title":{},"body":{"modules/AuctionsModule.html":{},"overview.html":{}}}],["cluster_auctionsmodule_exports",{"_index":216,"title":{},"body":{"modules/AuctionsModule.html":{},"overview.html":{}}}],["cluster_auctionsmodule_imports",{"_index":215,"title":{},"body":{"modules/AuctionsModule.html":{}}}],["cluster_auctionsmodule_providers",{"_index":217,"title":{},"body":{"modules/AuctionsModule.html":{},"overview.html":{}}}],["cluster_bidsmodule",{"_index":445,"title":{},"body":{"modules/BidsModule.html":{},"overview.html":{}}}],["cluster_bidsmodule_exports",{"_index":446,"title":{},"body":{"modules/BidsModule.html":{},"overview.html":{}}}],["cluster_bidsmodule_imports",{"_index":448,"title":{},"body":{"modules/BidsModule.html":{}}}],["cluster_bidsmodule_providers",{"_index":447,"title":{},"body":{"modules/BidsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":694,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":696,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":695,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_websocketsmodule",{"_index":749,"title":{},"body":{"modules/WebsocketsModule.html":{},"overview.html":{}}}],["cluster_websocketsmodule_exports",{"_index":750,"title":{},"body":{"modules/WebsocketsModule.html":{},"overview.html":{}}}],["cluster_websocketsmodule_providers",{"_index":751,"title":{},"body":{"modules/WebsocketsModule.html":{},"overview.html":{}}}],["colors",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":93,"title":{},"body":{"entities/Auction.html":{},"entities/Bid.html":{},"classes/Migrations1733386120063.html":{},"entities/User.html":{}}}],["come",{"_index":896,"title":{},"body":{"index.html":{}}}],["configmodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["configmodule.forroot",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["configservice.get('db_url",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('jwt_secret",{"_index":612,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["configservice.get('secret",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["connected",{"_index":397,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["connectedclientids",{"_index":375,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["connectedclients",{"_index":316,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["connectedclientscount",{"_index":373,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["connectedsocket",{"_index":361,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["connection",{"_index":400,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["const",{"_index":248,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":544,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["constructor",{"_index":225,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"injectables/CustomLoggerService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(auctionrepository",{"_index":226,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["constructor(bidrepository",{"_index":456,"title":{},"body":{"injectables/BidsService.html":{}}}],["constructor(configservice",{"_index":595,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(logger",{"_index":326,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["constructor(private",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"controllers/UsersController.html":{}}}],["constructor(userrepository",{"_index":706,"title":{},"body":{"injectables/UsersService.html":{}}}],["context",{"_index":372,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/CustomLoggerService.html":{},"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":580,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auctions",{"_index":200,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["controller('bids",{"_index":303,"title":{},"body":{"controllers/BidsController.html":{}}}],["controller('users",{"_index":679,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"controllers/BidsController.html":{},"modules/BidsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":793,"title":{},"body":{"dependencies.html":{}}}],["cors",{"_index":369,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["courses",{"_index":911,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":754,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":534,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["createauction",{"_index":153,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{}}}],["createauction(@body",{"_index":203,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["createauction(dto",{"_index":156,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{}}}],["createauctiondto",{"_index":139,"title":{"classes/CreateAuctionDto.html":{}},"body":{"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"classes/CreateAuctionDto.html":{},"coverage.html":{}}}],["createdat",{"_index":543,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["createid",{"_index":102,"title":{},"body":{"entities/Auction.html":{},"entities/Bid.html":{},"injectables/BidsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["createlogger",{"_index":509,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["createlogger(winstonconfig",{"_index":514,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["createparamdecorator",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder('bid",{"_index":471,"title":{},"body":{"injectables/BidsService.html":{}}}],["credentials",{"_index":743,"title":{},"body":{"injectables/UsersService.html":{}}}],["ctx",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentprice",{"_index":84,"title":{},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"injectables/AuctionsService.html":{},"classes/CreateAuctionDto.html":{},"classes/InitialMigration1732649684452.html":{}}}],["customloggerservice",{"_index":327,"title":{"injectables/CustomLoggerService.html":{}},"body":{"injectables/BidsGateway.html":{},"injectables/CustomLoggerService.html":{},"modules/WebsocketsModule.html":{},"coverage.html":{},"overview.html":{}}}],["daily",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":98,"title":{},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"injectables/BidsGateway.html":{},"classes/CreateAuctionDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["date(date.now",{"_index":144,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{}}}],["debug",{"_index":490,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["debug(message",{"_index":496,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["declarations",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{},"modules/WebsocketsModule.html":{},"overview.html":{}}}],["decoded",{"_index":738,"title":{},"body":{"injectables/UsersService.html":{}}}],["decoded.email",{"_index":740,"title":{},"body":{"injectables/UsersService.html":{}}}],["decorators",{"_index":92,"title":{},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"classes/CreateAuctionDto.html":{},"classes/LoginUserDto.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":907,"title":{},"body":{"index.html":{}}}],["default",{"_index":100,"title":{},"body":{"entities/Auction.html":{},"controllers/AuctionsController.html":{},"entities/Bid.html":{},"injectables/BidsGateway.html":{},"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":703,"title":{},"body":{"modules/UsersModule.html":{}}}],["defaultvaluepipe",{"_index":183,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["defaultvaluepipe(1",{"_index":210,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["defaultvaluepipe(5",{"_index":212,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["defined",{"_index":94,"title":{},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":559,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"controllers/UsersController.html":{}}}],["dependencies",{"_index":24,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{},"modules/WebsocketsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":860,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":878,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":869,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":888,"title":{},"body":{"index.html":{}}}],["desc",{"_index":474,"title":{},"body":{"injectables/BidsService.html":{}}}],["description",{"_index":85,"title":{},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{},"classes/InitialMigration1732649684452.html":{},"index.html":{},"properties.html":{}}}],["description'})@isstring",{"_index":481,"title":{},"body":{"classes/CreateAuctionDto.html":{}}}],["development",{"_index":845,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":919,"title":{},"body":{"index.html":{}}}],["disable",{"_index":386,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["disconnected",{"_index":401,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["discord",{"_index":904,"title":{},"body":{"index.html":{}}}],["dive",{"_index":906,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":755,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":796,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":525,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["down(queryrunner",{"_index":528,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["drop",{"_index":563,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["dto",{"_index":162,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"controllers/BidsController.html":{},"injectables/BidsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto.email",{"_index":722,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto.startingprice",{"_index":250,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["dto.username",{"_index":723,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/auction.dto",{"_index":187,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{}}}],["dto/bid.dto",{"_index":301,"title":{},"body":{"controllers/BidsController.html":{},"injectables/BidsService.html":{}}}],["dto/user.dto",{"_index":678,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":855,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":835,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":866,"title":{},"body":{"index.html":{}}}],["email",{"_index":541,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["empty",{"_index":412,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["end",{"_index":440,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["endauction",{"_index":223,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["endauction(id",{"_index":233,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["enddate",{"_index":86,"title":{},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"injectables/AuctionsService.html":{},"classes/CreateAuctionDto.html":{},"classes/InitialMigration1732649684452.html":{}}}],["ensure",{"_index":864,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":923,"title":{},"body":{"index.html":{}}}],["entities",{"_index":80,"title":{},"body":{"entities/Auction.html":{},"entities/Bid.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/auction.entity",{"_index":199,"title":{},"body":{"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{}}}],["entities/bid.entity",{"_index":451,"title":{},"body":{"modules/BidsModule.html":{},"injectables/BidsService.html":{}}}],["entities/user.entity",{"_index":605,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["entity",{"_index":78,"title":{"entities/Auction.html":{},"entities/Bid.html":{},"entities/User.html":{}},"body":{"entities/Auction.html":{},"entities/Bid.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity.{ts,js",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":576,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":491,"title":{},"body":{"injectables/CustomLoggerService.html":{},"injectables/UsersService.html":{}}}],["error(message",{"_index":499,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["eslint",{"_index":385,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":390,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["example",{"_index":140,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"classes/CreateAuctionDto.html":{},"classes/LoginUserDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"index.html":{}}}],["executioncontext",{"_index":572,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["existinguser",{"_index":721,"title":{},"body":{"injectables/UsersService.html":{}}}],["exists",{"_index":725,"title":{},"body":{"injectables/UsersService.html":{}}}],["experience",{"_index":909,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["export",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WebsocketsModule.html":{}}}],["exports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{},"modules/WebsocketsModule.html":{},"overview.html":{}}}],["express",{"_index":718,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["extends",{"_index":567,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["false",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":882,"title":{},"body":{"index.html":{}}}],["features",{"_index":892,"title":{},"body":{"index.html":{}}}],["few",{"_index":884,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WebsocketsModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["filters",{"_index":175,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{}}}],["filters.maxprice",{"_index":262,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["filters.minprice",{"_index":260,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["findbyid",{"_index":705,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(id",{"_index":709,"title":{},"body":{"injectables/UsersService.html":{}}}],["fk_1345c9f3ee0789dcff101f6c79b",{"_index":562,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["fk_2e00b0f268f93abcf693bb682c6",{"_index":560,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["fk_a8985d3662c274c57c2d0118538",{"_index":555,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["focus",{"_index":891,"title":{},"body":{"index.html":{}}}],["follow",{"_index":927,"title":{},"body":{"index.html":{}}}],["foreign",{"_index":556,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["format",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwardref",{"_index":219,"title":{},"body":{"modules/AuctionsModule.html":{},"modules/BidsModule.html":{}}}],["found",{"_index":257,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":833,"title":{},"body":{"index.html":{}}}],["full",{"_index":922,"title":{},"body":{"index.html":{}}}],["function",{"_index":772,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":827,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":887,"title":{},"body":{"index.html":{}}}],["get(':auctionid",{"_index":308,"title":{},"body":{"controllers/BidsController.html":{}}}],["get(':auctionid')@apiquery({name",{"_index":288,"title":{},"body":{"controllers/BidsController.html":{}}}],["get(':id",{"_index":165,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["get('history/:userid",{"_index":311,"title":{},"body":{"controllers/BidsController.html":{}}}],["get('history/:userid')@apiquery({name",{"_index":294,"title":{},"body":{"controllers/BidsController.html":{}}}],["get('me",{"_index":687,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('verify",{"_index":682,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apiquery({name",{"_index":170,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["getauction",{"_index":154,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["getauction(@param('id",{"_index":207,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["getauction(id",{"_index":164,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["getauctionbyid",{"_index":224,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["getauctionbyid(id",{"_index":235,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["getbidsforauction",{"_index":284,"title":{},"body":{"controllers/BidsController.html":{},"injectables/BidsService.html":{}}}],["getbidsforauction(@param('auctionid",{"_index":309,"title":{},"body":{"controllers/BidsController.html":{}}}],["getbidsforauction(auctionid",{"_index":287,"title":{},"body":{"controllers/BidsController.html":{},"injectables/BidsService.html":{}}}],["getbidsforuser",{"_index":285,"title":{},"body":{"controllers/BidsController.html":{},"injectables/BidsService.html":{}}}],["getbidsforuser(userid",{"_index":291,"title":{},"body":{"controllers/BidsController.html":{},"injectables/BidsService.html":{}}}],["gethighestbidsforauction",{"_index":454,"title":{},"body":{"injectables/BidsService.html":{}}}],["gethighestbidsforauction(auctionid",{"_index":461,"title":{},"body":{"injectables/BidsService.html":{}}}],["getprofile",{"_index":661,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(@request",{"_index":688,"title":{},"body":{"controllers/UsersController.html":{}}}],["getprofile(req",{"_index":665,"title":{},"body":{"controllers/UsersController.html":{}}}],["getting",{"_index":829,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":191,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser('id",{"_index":204,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{}}}],["github:paralleldrive/cuid2",{"_index":788,"title":{},"body":{"dependencies.html":{}}}],["graph",{"_index":914,"title":{},"body":{"index.html":{}}}],["grow",{"_index":937,"title":{},"body":{"index.html":{}}}],["handleconnection",{"_index":319,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["handleconnection(client",{"_index":333,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["handledisconnect",{"_index":320,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["handledisconnect(client",{"_index":337,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["handlerequest",{"_index":570,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":574,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlesubscription",{"_index":321,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["handlesubscription(client",{"_index":339,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["handleunsubscription",{"_index":322,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["handleunsubscription(client",{"_index":343,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["hands",{"_index":908,"title":{},"body":{"index.html":{}}}],["handy",{"_index":897,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":726,"title":{},"body":{"injectables/UsersService.html":{}}}],["header",{"_index":584,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["help",{"_index":912,"title":{},"body":{"index.html":{}}}],["here",{"_index":945,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":951,"title":{},"body":{"index.html":{}}}],["id",{"_index":87,"title":{},"body":{"entities/Auction.html":{},"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"injectables/BidsService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":371,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WebsocketsModule.html":{}}}],["imports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":82,"title":{"index.html":{}},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WebsocketsModule.html":{}}}],["information",{"_index":871,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":894,"title":{},"body":{"index.html":{}}}],["init",{"_index":394,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["initialmigration.ts",{"_index":522,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"coverage.html":{}}}],["initialmigration.ts:27",{"_index":530,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["initialmigration.ts:4",{"_index":527,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["initialmigration.ts:6",{"_index":532,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["initialmigration1732649684452",{"_index":520,"title":{"classes/InitialMigration1732649684452.html":{}},"body":{"classes/InitialMigration1732649684452.html":{},"coverage.html":{}}}],["inject",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["injectable",{"_index":75,"title":{"injectables/AppService.html":{},"injectables/AuctionsService.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"injectables/CustomLoggerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuctionsService.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"injectables/CustomLoggerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuctionsService.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"injectables/CustomLoggerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":241,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["injectrepository(auction",{"_index":246,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{}}}],["injectrepository(bid",{"_index":467,"title":{},"body":{"injectables/BidsService.html":{}}}],["injectrepository(user",{"_index":606,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["install",{"_index":886,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":843,"title":{},"body":{"index.html":{}}}],["integer",{"_index":548,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["interact",{"_index":915,"title":{},"body":{"index.html":{}}}],["ipaginationoptions",{"_index":238,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{}}}],["isboolean",{"_index":137,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{}}}],["isdate",{"_index":136,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{}}}],["isemail",{"_index":621,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isglobal",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":639,"title":{},"body":{"classes/PaginationOptionsDto.html":{}}}],["isint()@type(undefined)@min(1",{"_index":635,"title":{},"body":{"classes/PaginationOptionsDto.html":{}}}],["isnumber",{"_index":135,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{},"classes/PlaceBidDto.html":{}}}],["isoptional",{"_index":131,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{}}}],["isoptional()@isboolean",{"_index":126,"title":{},"body":{"classes/AuctionFiltersDto.html":{}}}],["isoptional()@isnumber",{"_index":128,"title":{},"body":{"classes/AuctionFiltersDto.html":{}}}],["ispasswordvalid",{"_index":744,"title":{},"body":{"injectables/UsersService.html":{}}}],["isstring",{"_index":134,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{},"classes/LoginUserDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{}}}],["job",{"_index":930,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":932,"title":{},"body":{"index.html":{}}}],["join",{"_index":943,"title":{},"body":{"index.html":{}}}],["jpbnop2tgyxp3vt5d4fyz2r4",{"_index":646,"title":{},"body":{"classes/PlaceBidDto.html":{}}}],["jpbnop2tgyxp3vt5d4fyz2r4'})@isstring",{"_index":644,"title":{},"body":{"classes/PlaceBidDto.html":{}}}],["json.stringify(winningbid",{"_index":442,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["jwt",{"_index":604,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":188,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":608,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["jwtmodule.registerasync",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["jwtservice",{"_index":707,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwtstrategy",{"_index":591,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":948,"title":{},"body":{"index.html":{}}}],["key",{"_index":547,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"index.html":{}}}],["learn",{"_index":900,"title":{},"body":{"index.html":{}}}],["legend",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{},"modules/WebsocketsModule.html":{},"overview.html":{}}}],["length",{"_index":104,"title":{},"body":{"entities/Auction.html":{},"entities/Bid.html":{},"entities/User.html":{}}}],["license",{"_index":954,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":935,"title":{},"body":{"index.html":{}}}],["limit",{"_index":169,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"classes/PaginationOptionsDto.html":{}}}],["line",{"_index":388,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":929,"title":{},"body":{"index.html":{}}}],["listauctions",{"_index":155,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{}}}],["listauctions(filters",{"_index":167,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{}}}],["log",{"_index":492,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["log(message",{"_index":502,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["logformat",{"_index":770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logged",{"_index":693,"title":{},"body":{"controllers/UsersController.html":{}}}],["logger",{"_index":329,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/CustomLoggerService.html":{}}}],["logger/logger.service",{"_index":368,"title":{},"body":{"injectables/BidsGateway.html":{},"modules/WebsocketsModule.html":{}}}],["loggerservice",{"_index":508,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["logging",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":662,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["login(@body",{"_index":685,"title":{},"body":{"controllers/UsersController.html":{}}}],["login(dto",{"_index":668,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["loginuserdto",{"_index":615,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["logout",{"_index":663,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["logout(response",{"_index":712,"title":{},"body":{"injectables/UsersService.html":{}}}],["logstate",{"_index":323,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["logstate(action",{"_index":346,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["looking",{"_index":872,"title":{},"body":{"index.html":{}}}],["loop",{"_index":925,"title":{},"body":{"index.html":{}}}],["mailservice",{"_index":719,"title":{},"body":{"injectables/UsersService.html":{}}}],["makes",{"_index":880,"title":{},"body":{"index.html":{}}}],["managing",{"_index":893,"title":{},"body":{"index.html":{}}}],["manytoone",{"_index":114,"title":{},"body":{"entities/Auction.html":{},"entities/Bid.html":{}}}],["manytoone(undefined",{"_index":109,"title":{},"body":{"entities/Auction.html":{},"entities/Bid.html":{}}}],["map",{"_index":354,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["matching",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WebsocketsModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":876,"title":{},"body":{"index.html":{}}}],["maxprice",{"_index":122,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{}}}],["message",{"_index":424,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/CustomLoggerService.html":{},"controllers/UsersController.html":{}}}],["messagebody",{"_index":364,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["metadata",{"_index":810,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":152,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1733386120063.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["migrationinterface",{"_index":523,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["migrations",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations.ts",{"_index":628,"title":{},"body":{"classes/Migrations1733386120063.html":{},"coverage.html":{}}}],["migrations.ts:16",{"_index":630,"title":{},"body":{"classes/Migrations1733386120063.html":{}}}],["migrations.ts:4",{"_index":629,"title":{},"body":{"classes/Migrations1733386120063.html":{}}}],["migrations.ts:6",{"_index":631,"title":{},"body":{"classes/Migrations1733386120063.html":{}}}],["migrations/*.{ts,js",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations1733386120063",{"_index":626,"title":{"classes/Migrations1733386120063.html":{}},"body":{"classes/Migrations1733386120063.html":{},"coverage.html":{}}}],["migrationstablename",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":640,"title":{},"body":{"classes/PaginationOptionsDto.html":{}}}],["min(1",{"_index":641,"title":{},"body":{"classes/PaginationOptionsDto.html":{}}}],["minprice",{"_index":123,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"injectables/AuctionsService.html":{},"classes/CreateAuctionDto.html":{}}}],["miscellaneous",{"_index":826,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":934,"title":{},"body":{"index.html":{}}}],["mjml",{"_index":798,"title":{},"body":{"dependencies.html":{}}}],["mode",{"_index":848,"title":{},"body":{"index.html":{}}}],["module",{"_index":21,"title":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{},"modules/WebsocketsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{},"modules/WebsocketsModule.html":{},"overview.html":{}}}],["modules",{"_index":23,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{},"modules/WebsocketsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":870,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":949,"title":{},"body":{"index.html":{}}}],["n",{"_index":415,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["name",{"_index":88,"title":{},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1733386120063.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":920,"title":{},"body":{"index.html":{}}}],["nest",{"_index":800,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":953,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":197,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"injectables/BidsService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"injectables/CustomLoggerService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WebsocketsModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":579,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"classes/CreateAuctionDto.html":{},"classes/LoginUserDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":366,"title":{},"body":{"injectables/BidsGateway.html":{},"dependencies.html":{}}}],["nestwinstonmoduleutilities.format.nestlike('bazaar",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":143,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newprice",{"_index":352,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["next",{"_index":387,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["node",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":832,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":803,"title":{},"body":{"dependencies.html":{}}}],["notfoundexception",{"_index":240,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{}}}],["notfoundexception('auction",{"_index":256,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{}}}],["notification",{"_index":439,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["notifyauctionend",{"_index":324,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["notifyauctionend(auctionid",{"_index":349,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["notifypriceupdate",{"_index":325,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["notifypriceupdate(auctionid",{"_index":351,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["now",{"_index":263,"title":{},"body":{"injectables/AuctionsService.html":{},"classes/Migrations1733386120063.html":{}}}],["npm",{"_index":842,"title":{},"body":{"index.html":{}}}],["null",{"_index":538,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1733386120063.html":{}}}],["number",{"_index":91,"title":{},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"classes/CreateAuctionDto.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{}}}],["object",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["offer",{"_index":931,"title":{},"body":{"index.html":{}}}],["official",{"_index":877,"title":{},"body":{"index.html":{}}}],["ongatewayconnection",{"_index":362,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["ongatewaydisconnect",{"_index":363,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["ongatewayinit",{"_index":365,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["open",{"_index":936,"title":{},"body":{"index.html":{}}}],["optional",{"_index":161,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1733386120063.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":237,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{}}}],["order",{"_index":477,"title":{},"body":{"injectables/BidsService.html":{}}}],["orderby('bid.placedat",{"_index":473,"title":{},"body":{"injectables/BidsService.html":{}}}],["origin",{"_index":370,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"modules/WebsocketsModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":958,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":777,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":168,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"classes/PaginationOptionsDto.html":{}}}],["paginate",{"_index":198,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"injectables/BidsService.html":{},"dependencies.html":{}}}],["paginate(querybuilder",{"_index":475,"title":{},"body":{"injectables/BidsService.html":{}}}],["pagination",{"_index":196,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"injectables/BidsService.html":{}}}],["paginationoptions",{"_index":292,"title":{},"body":{"controllers/BidsController.html":{}}}],["paginationoptionsdto",{"_index":293,"title":{"classes/PaginationOptionsDto.html":{}},"body":{"controllers/BidsController.html":{},"classes/PaginationOptionsDto.html":{},"coverage.html":{}}}],["paralleldrive/cuid2",{"_index":117,"title":{},"body":{"entities/Auction.html":{},"entities/Bid.html":{},"injectables/BidsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["param",{"_index":180,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{}}}],["param('userid",{"_index":312,"title":{},"body":{"controllers/BidsController.html":{}}}],["parameters",{"_index":160,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1733386120063.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":184,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["parser",{"_index":794,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":921,"title":{},"body":{"index.html":{}}}],["passport",{"_index":603,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":698,"title":{},"body":{"modules/UsersModule.html":{}}}],["passportmodule.register",{"_index":702,"title":{},"body":{"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":601,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":593,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":542,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["payload",{"_index":600,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["pg",{"_index":807,"title":{},"body":{"dependencies.html":{}}}],["pk_9dc876c629273e71646cf6dfa67",{"_index":550,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["pk_cace4a159ff9f2512dd42373760",{"_index":545,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["pk_ed405dda320051aca2dcb1a50bb",{"_index":552,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["placebid",{"_index":286,"title":{},"body":{"controllers/BidsController.html":{},"injectables/BidsService.html":{}}}],["placebid(@body",{"_index":306,"title":{},"body":{"controllers/BidsController.html":{}}}],["placebid(dto",{"_index":296,"title":{},"body":{"controllers/BidsController.html":{},"injectables/BidsService.html":{}}}],["placebiddto",{"_index":297,"title":{"classes/PlaceBidDto.html":{}},"body":{"controllers/BidsController.html":{},"injectables/BidsService.html":{},"classes/PlaceBidDto.html":{},"coverage.html":{}}}],["placedat",{"_index":273,"title":{},"body":{"entities/Bid.html":{},"classes/Migrations1733386120063.html":{}}}],["platform",{"_index":875,"title":{},"body":{"index.html":{}}}],["please",{"_index":903,"title":{},"body":{"index.html":{}}}],["possible",{"_index":867,"title":{},"body":{"index.html":{}}}],["post",{"_index":178,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"controllers/UsersController.html":{}}}],["post('create",{"_index":201,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["post('create')@useguards(jwtauthguard)@apibearerauth",{"_index":158,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["post('login",{"_index":669,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('logout",{"_index":691,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('place",{"_index":305,"title":{},"body":{"controllers/BidsController.html":{}}}],["post('place')@useguards(jwtauthguard)@apibearerauth",{"_index":298,"title":{},"body":{"controllers/BidsController.html":{}}}],["post('register",{"_index":674,"title":{},"body":{"controllers/UsersController.html":{}}}],["postgres",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":150,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"controllers/UsersController.html":{}}}],["prettyprint",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["price",{"_index":432,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["primary",{"_index":546,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["primarycolumn",{"_index":113,"title":{},"body":{"entities/Auction.html":{},"entities/Bid.html":{},"entities/User.html":{}}}],["primarycolumn('varchar",{"_index":103,"title":{},"body":{"entities/Auction.html":{},"entities/Bid.html":{},"entities/User.html":{}}}],["private",{"_index":247,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"injectables/CustomLoggerService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["process.env.db_url",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":850,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":831,"title":{},"body":{"index.html":{}}}],["project",{"_index":840,"title":{},"body":{"index.html":{}}}],["promise",{"_index":177,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"injectables/BidsService.html":{},"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":83,"title":{"properties.html":{}},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"entities/Bid.html":{},"injectables/BidsGateway.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"properties.html":{}}}],["providers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{},"modules/WebsocketsModule.html":{},"overview.html":{}}}],["pswd1234",{"_index":625,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["pswd1234'})@isstring",{"_index":619,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["public",{"_index":524,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["query",{"_index":181,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{}}}],["query('limit",{"_index":211,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["query('page",{"_index":209,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["querybuilder",{"_index":258,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{}}}],["querybuilder.andwhere('auction.currentprice",{"_index":261,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["querybuilder.andwhere('auction.enddate",{"_index":264,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["queryrunner",{"_index":529,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["queryrunner.query",{"_index":533,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["queryrunner.query(`alter",{"_index":632,"title":{},"body":{"classes/Migrations1733386120063.html":{}}}],["queryrunner.query(`drop",{"_index":564,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["queryrunner.query(`update",{"_index":633,"title":{},"body":{"classes/Migrations1733386120063.html":{}}}],["questions",{"_index":901,"title":{},"body":{"index.html":{}}}],["read",{"_index":944,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"controllers/UsersController.html":{}}}],["ready",{"_index":859,"title":{},"body":{"index.html":{}}}],["real",{"_index":916,"title":{},"body":{"index.html":{}}}],["references",{"_index":557,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["reflect",{"_index":809,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":664,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["register(@body",{"_index":680,"title":{},"body":{"controllers/UsersController.html":{}}}],["register(dto",{"_index":673,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["registeruserdto",{"_index":622,"title":{"classes/RegisterUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["relations",{"_index":254,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{}}}],["removed",{"_index":408,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["repository",{"_index":227,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":609,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{}}}],["req.headers['authorization",{"_index":610,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["request",{"_index":417,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["request.headers['authorization",{"_index":582,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":171,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"injectables/JwtAuthGuard.html":{}}}],["requiring",{"_index":883,"title":{},"body":{"index.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{},"modules/WebsocketsModule.html":{},"overview.html":{}}}],["resources",{"_index":895,"title":{},"body":{"index.html":{}}}],["response",{"_index":713,"title":{},"body":{"injectables/UsersService.html":{}}}],["results",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WebsocketsModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":205,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":163,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1733386120063.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rotate",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":844,"title":{},"body":{"index.html":{}}}],["runs",{"_index":865,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":812,"title":{},"body":{"dependencies.html":{}}}],["saveduser",{"_index":729,"title":{},"body":{"injectables/UsersService.html":{}}}],["scalable",{"_index":836,"title":{},"body":{"index.html":{}}}],["searchterm",{"_index":124,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{}}}],["secret",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secretorkey",{"_index":611,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":747,"title":{},"body":{"injectables/UsersService.html":{}}}],["seller",{"_index":89,"title":{},"body":{"entities/Auction.html":{},"injectables/AuctionsService.html":{},"injectables/BidsService.html":{}}}],["sellerid",{"_index":549,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["sending",{"_index":431,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["server",{"_index":317,"title":{},"body":{"injectables/BidsGateway.html":{},"index.html":{}}}],["set",{"_index":356,"title":{},"body":{"injectables/BidsGateway.html":{},"classes/Migrations1733386120063.html":{}}}],["setup",{"_index":841,"title":{},"body":{"index.html":{}}}],["side",{"_index":837,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["simple",{"_index":885,"title":{},"body":{"index.html":{}}}],["socket",{"_index":334,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["socket.io",{"_index":367,"title":{},"body":{"injectables/BidsGateway.html":{},"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"modules/AuctionsModule.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"modules/BidsModule.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"modules/WebsocketsModule.html":{},"index.html":{}}}],["source.ts",{"_index":765,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sponsors",{"_index":939,"title":{},"body":{"index.html":{}}}],["src/.../data",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../winston.config.ts",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/auctions/auctions.controller.ts",{"_index":149,"title":{},"body":{"controllers/AuctionsController.html":{},"coverage.html":{}}}],["src/auctions/auctions.controller.ts:27",{"_index":159,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["src/auctions/auctions.controller.ts:32",{"_index":166,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["src/auctions/auctions.controller.ts:39",{"_index":174,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["src/auctions/auctions.module.ts",{"_index":218,"title":{},"body":{"modules/AuctionsModule.html":{}}}],["src/auctions/auctions.service.ts",{"_index":222,"title":{},"body":{"injectables/AuctionsService.html":{},"coverage.html":{}}}],["src/auctions/auctions.service.ts:16",{"_index":230,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["src/auctions/auctions.service.ts:23",{"_index":232,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["src/auctions/auctions.service.ts:32",{"_index":236,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["src/auctions/auctions.service.ts:43",{"_index":239,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["src/auctions/auctions.service.ts:76",{"_index":234,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["src/auctions/dto/auction.dto.ts",{"_index":120,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{},"coverage.html":{}}}],["src/auctions/dto/auction.dto.ts:15",{"_index":486,"title":{},"body":{"classes/CreateAuctionDto.html":{}}}],["src/auctions/dto/auction.dto.ts:21",{"_index":482,"title":{},"body":{"classes/CreateAuctionDto.html":{}}}],["src/auctions/dto/auction.dto.ts:27",{"_index":488,"title":{},"body":{"classes/CreateAuctionDto.html":{}}}],["src/auctions/dto/auction.dto.ts:30",{"_index":479,"title":{},"body":{"classes/CreateAuctionDto.html":{}}}],["src/auctions/dto/auction.dto.ts:36",{"_index":484,"title":{},"body":{"classes/CreateAuctionDto.html":{}}}],["src/auctions/dto/auction.dto.ts:42",{"_index":130,"title":{},"body":{"classes/AuctionFiltersDto.html":{}}}],["src/auctions/dto/auction.dto.ts:46",{"_index":129,"title":{},"body":{"classes/AuctionFiltersDto.html":{}}}],["src/auctions/dto/auction.dto.ts:49",{"_index":132,"title":{},"body":{"classes/AuctionFiltersDto.html":{}}}],["src/auctions/dto/auction.dto.ts:53",{"_index":127,"title":{},"body":{"classes/AuctionFiltersDto.html":{}}}],["src/auctions/entities/auction.entity.ts",{"_index":81,"title":{},"body":{"entities/Auction.html":{},"coverage.html":{}}}],["src/auctions/entities/auction.entity.ts:11",{"_index":107,"title":{},"body":{"entities/Auction.html":{}}}],["src/auctions/entities/auction.entity.ts:14",{"_index":97,"title":{},"body":{"entities/Auction.html":{}}}],["src/auctions/entities/auction.entity.ts:17",{"_index":112,"title":{},"body":{"entities/Auction.html":{}}}],["src/auctions/entities/auction.entity.ts:20",{"_index":95,"title":{},"body":{"entities/Auction.html":{}}}],["src/auctions/entities/auction.entity.ts:23",{"_index":99,"title":{},"body":{"entities/Auction.html":{}}}],["src/auctions/entities/auction.entity.ts:26",{"_index":111,"title":{},"body":{"entities/Auction.html":{}}}],["src/auctions/entities/auction.entity.ts:8",{"_index":106,"title":{},"body":{"entities/Auction.html":{}}}],["src/bids/bids.controller.ts",{"_index":282,"title":{},"body":{"controllers/BidsController.html":{},"coverage.html":{}}}],["src/bids/bids.controller.ts:24",{"_index":299,"title":{},"body":{"controllers/BidsController.html":{}}}],["src/bids/bids.controller.ts:31",{"_index":289,"title":{},"body":{"controllers/BidsController.html":{}}}],["src/bids/bids.controller.ts:38",{"_index":295,"title":{},"body":{"controllers/BidsController.html":{}}}],["src/bids/bids.module.ts",{"_index":449,"title":{},"body":{"modules/BidsModule.html":{}}}],["src/bids/bids.service.ts",{"_index":453,"title":{},"body":{"injectables/BidsService.html":{},"coverage.html":{}}}],["src/bids/bids.service.ts:20",{"_index":457,"title":{},"body":{"injectables/BidsService.html":{}}}],["src/bids/bids.service.ts:28",{"_index":465,"title":{},"body":{"injectables/BidsService.html":{}}}],["src/bids/bids.service.ts:39",{"_index":463,"title":{},"body":{"injectables/BidsService.html":{}}}],["src/bids/bids.service.ts:73",{"_index":460,"title":{},"body":{"injectables/BidsService.html":{}}}],["src/bids/bids.service.ts:85",{"_index":459,"title":{},"body":{"injectables/BidsService.html":{}}}],["src/bids/bids.service.ts:93",{"_index":462,"title":{},"body":{"injectables/BidsService.html":{}}}],["src/bids/dto/bid.dto.ts",{"_index":642,"title":{},"body":{"classes/PlaceBidDto.html":{},"coverage.html":{}}}],["src/bids/dto/bid.dto.ts:15",{"_index":645,"title":{},"body":{"classes/PlaceBidDto.html":{}}}],["src/bids/dto/bid.dto.ts:9",{"_index":643,"title":{},"body":{"classes/PlaceBidDto.html":{}}}],["src/bids/entities/bid.entity.ts",{"_index":270,"title":{},"body":{"entities/Bid.html":{},"coverage.html":{}}}],["src/bids/entities/bid.entity.ts:12",{"_index":274,"title":{},"body":{"entities/Bid.html":{}}}],["src/bids/entities/bid.entity.ts:15",{"_index":279,"title":{},"body":{"entities/Bid.html":{}}}],["src/bids/entities/bid.entity.ts:18",{"_index":276,"title":{},"body":{"entities/Bid.html":{}}}],["src/bids/entities/bid.entity.ts:21",{"_index":277,"title":{},"body":{"entities/Bid.html":{}}}],["src/bids/entities/bid.entity.ts:9",{"_index":278,"title":{},"body":{"entities/Bid.html":{}}}],["src/data",{"_index":764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/logger/logger.service.ts",{"_index":489,"title":{},"body":{"injectables/CustomLoggerService.html":{},"coverage.html":{}}}],["src/logger/logger.service.ts:13",{"_index":503,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["src/logger/logger.service.ts:17",{"_index":501,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["src/logger/logger.service.ts:21",{"_index":507,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["src/logger/logger.service.ts:25",{"_index":497,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["src/logger/logger.service.ts:29",{"_index":505,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["src/logger/logger.service.ts:7",{"_index":495,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["src/logger/winston.config.ts",{"_index":769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mail/mail.service",{"_index":720,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/main.ts",{"_index":771,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations/1732649684452",{"_index":521,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"coverage.html":{}}}],["src/migrations/1733386120063",{"_index":627,"title":{},"body":{"classes/Migrations1733386120063.html":{},"coverage.html":{}}}],["src/pagination/pagination.dto",{"_index":302,"title":{},"body":{"controllers/BidsController.html":{}}}],["src/pagination/pagination.dto.ts",{"_index":634,"title":{},"body":{"classes/PaginationOptionsDto.html":{},"coverage.html":{}}}],["src/pagination/pagination.dto.ts:13",{"_index":636,"title":{},"body":{"classes/PaginationOptionsDto.html":{}}}],["src/pagination/pagination.dto.ts:8",{"_index":637,"title":{},"body":{"classes/PaginationOptionsDto.html":{}}}],["src/users/decorators/get",{"_index":773,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dto/user.dto.ts",{"_index":616,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/users/dto/user.dto.ts:15",{"_index":648,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["src/users/dto/user.dto.ts:21",{"_index":649,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["src/users/dto/user.dto.ts:29",{"_index":618,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/users/dto/user.dto.ts:35",{"_index":620,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/users/dto/user.dto.ts:9",{"_index":651,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["src/users/entities/user.entity.ts",{"_index":652,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:10",{"_index":657,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:13",{"_index":654,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:16",{"_index":656,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:19",{"_index":653,"title":{},"body":{"entities/User.html":{}}}],["src/users/entities/user.entity.ts:7",{"_index":655,"title":{},"body":{"entities/User.html":{}}}],["src/users/guards/jwt",{"_index":565,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/users/stategies/jwt.strategy.ts",{"_index":592,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/users/stategies/jwt.strategy.ts:10",{"_index":597,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/users/stategies/jwt.strategy.ts:28",{"_index":599,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/users/users.controller.ts",{"_index":659,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:19",{"_index":675,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:29",{"_index":670,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":667,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:46",{"_index":672,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":697,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":704,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:111",{"_index":714,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:13",{"_index":708,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":715,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:72",{"_index":711,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:92",{"_index":710,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/websockets/bids.gateway.ts",{"_index":314,"title":{},"body":{"injectables/BidsGateway.html":{},"coverage.html":{}}}],["src/websockets/bids.gateway.ts:112",{"_index":345,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["src/websockets/bids.gateway.ts:141",{"_index":353,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["src/websockets/bids.gateway.ts:157",{"_index":350,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["src/websockets/bids.gateway.ts:26",{"_index":328,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["src/websockets/bids.gateway.ts:30",{"_index":355,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["src/websockets/bids.gateway.ts:31",{"_index":357,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["src/websockets/bids.gateway.ts:33",{"_index":347,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["src/websockets/bids.gateway.ts:50",{"_index":331,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["src/websockets/bids.gateway.ts:54",{"_index":335,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["src/websockets/bids.gateway.ts:60",{"_index":338,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["src/websockets/bids.gateway.ts:90",{"_index":341,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["src/websockets/websockets.module.ts",{"_index":752,"title":{},"body":{"modules/WebsocketsModule.html":{}}}],["start",{"_index":846,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":849,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":851,"title":{},"body":{"index.html":{}}}],["started",{"_index":830,"title":{"index.html":{}},"body":{}}],["starter",{"_index":839,"title":{},"body":{"index.html":{}}}],["startingprice",{"_index":90,"title":{},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{},"classes/InitialMigration1732649684452.html":{}}}],["stategies/jwt.strategy",{"_index":700,"title":{},"body":{"modules/UsersModule.html":{}}}],["statements",{"_index":757,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":924,"title":{},"body":{"index.html":{}}}],["steps",{"_index":862,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":881,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":602,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":96,"title":{},"body":{"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":613,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["subscribed",{"_index":425,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["subscribemessage",{"_index":360,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["subscribemessage('subscribetoauction",{"_index":340,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["subscribemessage('unsubscribefromauction",{"_index":344,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["subscriberids",{"_index":381,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["subscribers",{"_index":378,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["subscribers.delete(client.id",{"_index":405,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["subscribers.has(client.id",{"_index":404,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["subscribers.size",{"_index":380,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["subscriberscount",{"_index":379,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["subscription",{"_index":416,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["subscriptions",{"_index":413,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["success",{"_index":423,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["successfully",{"_index":692,"title":{},"body":{"controllers/UsersController.html":{}}}],["super",{"_index":607,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":589,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":902,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":956,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":535,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":863,"title":{},"body":{"index.html":{}}}],["test",{"_index":854,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":857,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":856,"title":{},"body":{"index.html":{}}}],["tests",{"_index":852,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":938,"title":{},"body":{"index.html":{}}}],["this.auctionrepository.create",{"_index":249,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["this.auctionrepository.createquerybuilder('auction",{"_index":259,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["this.auctionrepository.findone",{"_index":253,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{}}}],["this.auctionrepository.save(auction",{"_index":251,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["this.auctionrepository.update(auction",{"_index":266,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["this.auctionsservice.createauction(dto",{"_index":206,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["this.auctionsservice.getauctionbyid(id",{"_index":208,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["this.auctionsservice.listauctions(filters",{"_index":213,"title":{},"body":{"controllers/AuctionsController.html":{}}}],["this.auctionsubscriptions.delete(auctionid",{"_index":411,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.auctionsubscriptions.entries",{"_index":409,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.auctionsubscriptions.foreach((subscribers",{"_index":403,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.auctionsubscriptions.get(auctionid).add(client.id",{"_index":421,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.auctionsubscriptions.get(auctionid).delete(client.id",{"_index":427,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.auctionsubscriptions.get(auctionid).size",{"_index":428,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.auctionsubscriptions.get(auctionid)?.size",{"_index":435,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.auctionsubscriptions.has(auctionid",{"_index":418,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.auctionsubscriptions.set(auctionid",{"_index":420,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.bidrepository",{"_index":470,"title":{},"body":{"injectables/BidsService.html":{}}}],["this.bidrepository.find",{"_index":476,"title":{},"body":{"injectables/BidsService.html":{}}}],["this.bidrepository.findone",{"_index":478,"title":{},"body":{"injectables/BidsService.html":{}}}],["this.bidservice.getbidsforauction(auctionid",{"_index":310,"title":{},"body":{"controllers/BidsController.html":{}}}],["this.bidservice.getbidsforuser(userid",{"_index":313,"title":{},"body":{"controllers/BidsController.html":{}}}],["this.bidservice.placebid(dto",{"_index":307,"title":{},"body":{"controllers/BidsController.html":{}}}],["this.bidsgateway.notifyauctionend(id",{"_index":269,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["this.bidsservice.gethighestbidsforauction(id",{"_index":268,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["this.connectedclients.add(client.id",{"_index":395,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.connectedclients.delete(client.id",{"_index":402,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.connectedclients.size",{"_index":374,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.getauctionbyid(id",{"_index":265,"title":{},"body":{"injectables/AuctionsService.html":{}}}],["this.jwtservice.sign",{"_index":731,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign(payload",{"_index":746,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.verify(token",{"_index":739,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger",{"_index":513,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["this.logger.debug(message",{"_index":518,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["this.logger.error(message",{"_index":516,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["this.logger.info(message",{"_index":515,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["this.logger.log",{"_index":407,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.logger.log('sockets",{"_index":393,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.logger.log(`\\n",{"_index":396,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.logger.log(`creating",{"_index":419,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.logger.log(`new",{"_index":434,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.logger.log(`winning",{"_index":441,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.logger.log(json.stringify(context",{"_index":383,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.logger.verbose(message",{"_index":519,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["this.logger.warn(message",{"_index":517,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["this.logstate('auction",{"_index":444,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.logstate('disconnection",{"_index":414,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.logstate('new",{"_index":399,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.logstate('price",{"_index":438,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.logstate('unsubscription",{"_index":429,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.mailservice.sendverificationemail(user.email",{"_index":735,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.server.to(`auction:${auctionid}`).emit('auctionend",{"_index":443,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.server.to(`auction:${auctionid}`).emit('priceupdate",{"_index":436,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["this.userrepository.create",{"_index":728,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone",{"_index":614,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["this.userrepository.save(user",{"_index":730,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findbyid(req.user.sub",{"_index":689,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.login(dto",{"_index":686,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.register(dto",{"_index":681,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.verifyemail(token",{"_index":684,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.validateauction(dto.auctionid",{"_index":468,"title":{},"body":{"injectables/BidsService.html":{}}}],["throw",{"_index":255,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":917,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":437,"title":{},"body":{"injectables/BidsGateway.html":{},"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["token",{"_index":585,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":946,"title":{},"body":{"index.html":{}}}],["trace",{"_index":500,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["transformer",{"_index":638,"title":{},"body":{"classes/PaginationOptionsDto.html":{},"dependencies.html":{}}}],["transports",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":737,"title":{},"body":{"injectables/UsersService.html":{}}}],["ts",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":952,"title":{},"body":{"index.html":{}}}],["type",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"entities/Auction.html":{},"classes/AuctionFiltersDto.html":{},"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"controllers/BidsController.html":{},"injectables/BidsGateway.html":{},"injectables/BidsService.html":{},"classes/CreateAuctionDto.html":{},"injectables/CustomLoggerService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Migrations1733386120063.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":115,"title":{},"body":{"entities/Auction.html":{},"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"entities/Bid.html":{},"injectables/BidsService.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtStrategy.html":{},"classes/Migrations1733386120063.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([auction",{"_index":221,"title":{},"body":{"modules/AuctionsModule.html":{}}}],["typeormmodule.forfeature([bid",{"_index":452,"title":{},"body":{"modules/BidsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":701,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["typescript",{"_index":389,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["ui",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":577,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception('authentication",{"_index":590,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception('authorization",{"_index":583,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception('invalid",{"_index":741,"title":{},"body":{"injectables/UsersService.html":{}}}],["unauthorizedexception('user",{"_index":748,"title":{},"body":{"injectables/UsersService.html":{}}}],["undefined",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined})@isdate",{"_index":483,"title":{},"body":{"classes/CreateAuctionDto.html":{}}}],["unit",{"_index":853,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":342,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{}}}],["unlicensed",{"_index":964,"title":{},"body":{"properties.html":{}}}],["unsubscribed",{"_index":430,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["unsubscription",{"_index":426,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["unused",{"_index":391,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["up",{"_index":526,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["up(queryrunner",{"_index":531,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{}}}],["update",{"_index":433,"title":{},"body":{"injectables/BidsGateway.html":{},"classes/InitialMigration1732649684452.html":{}}}],["updates",{"_index":926,"title":{},"body":{"index.html":{}}}],["url",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["useguards",{"_index":182,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":202,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@apibearerauth()@get('me",{"_index":666,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@apibearerauth()@post('logout",{"_index":671,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":108,"title":{"entities/User.html":{}},"body":{"entities/Auction.html":{},"modules/AuctionsModule.html":{},"entities/Bid.html":{},"classes/InitialMigration1732649684452.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user\"(\"id",{"_index":558,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["user.decorator",{"_index":193,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{}}}],["user.decorator.ts",{"_index":774,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":732,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":110,"title":{},"body":{"entities/Auction.html":{},"entities/Bid.html":{},"injectables/UsersService.html":{}}}],["user.password",{"_index":690,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user1",{"_index":623,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["user1'})@isstring",{"_index":650,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user1@mail.ru",{"_index":624,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["user1@mail.ru'})@isemail",{"_index":647,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user1@mail.ru'})@isstring",{"_index":617,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user?.[data",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":157,"title":{},"body":{"controllers/AuctionsController.html":{},"injectables/AuctionsService.html":{},"controllers/BidsController.html":{},"injectables/BidsService.html":{}}}],["username",{"_index":539,"title":{},"body":{"classes/InitialMigration1732649684452.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["userrepository",{"_index":596,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":660,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":699,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":677,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/decorators/get",{"_index":192,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{}}}],["users/entities/user.entity",{"_index":116,"title":{},"body":{"entities/Auction.html":{},"modules/AuctionsModule.html":{},"entities/Bid.html":{}}}],["users/guards/jwt",{"_index":189,"title":{},"body":{"controllers/AuctionsController.html":{},"controllers/BidsController.html":{},"controllers/UsersController.html":{}}}],["users/users.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":658,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":34,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":676,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":918,"title":{},"body":{"index.html":{}}}],["validate",{"_index":594,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":598,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateauction",{"_index":455,"title":{},"body":{"injectables/BidsService.html":{}}}],["validateauction(auctionid",{"_index":464,"title":{},"body":{"injectables/BidsService.html":{}}}],["validator",{"_index":138,"title":{},"body":{"classes/AuctionFiltersDto.html":{},"classes/CreateAuctionDto.html":{},"classes/LoginUserDto.html":{},"classes/PaginationOptionsDto.html":{},"classes/PlaceBidDto.html":{},"classes/RegisterUserDto.html":{},"dependencies.html":{}}}],["value",{"_index":101,"title":{},"body":{"entities/Auction.html":{},"controllers/AuctionsController.html":{},"entities/Bid.html":{},"injectables/BidsGateway.html":{},"classes/InitialMigration1732649684452.html":{},"classes/Migrations1733386120063.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":766,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":965,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":392,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["varying",{"_index":540,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["varying(32",{"_index":537,"title":{},"body":{"classes/InitialMigration1732649684452.html":{}}}],["verbose",{"_index":493,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["verbose(message",{"_index":504,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["verification",{"_index":733,"title":{},"body":{"injectables/UsersService.html":{}}}],["verifyemail(@query('token",{"_index":683,"title":{},"body":{"controllers/UsersController.html":{}}}],["verifyemail(token",{"_index":736,"title":{},"body":{"injectables/UsersService.html":{}}}],["version",{"_index":962,"title":{},"body":{"properties.html":{}}}],["video",{"_index":910,"title":{},"body":{"index.html":{}}}],["visit",{"_index":899,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":913,"title":{},"body":{"index.html":{}}}],["void",{"_index":332,"title":{},"body":{"injectables/BidsGateway.html":{},"injectables/CustomLoggerService.html":{}}}],["warn",{"_index":494,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["warn(message",{"_index":506,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["watch",{"_index":847,"title":{},"body":{"index.html":{}}}],["website",{"_index":950,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":384,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["websocketgateway",{"_index":359,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["websockets/bids.gateway",{"_index":242,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsService.html":{}}}],["websockets/websockets.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{}}}],["websocketserver",{"_index":358,"title":{},"body":{"injectables/BidsGateway.html":{}}}],["websocketsmodule",{"_index":35,"title":{"modules/WebsocketsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/WebsocketsModule.html":{},"modules.html":{},"overview.html":{}}}],["where('bid.bidderid",{"_index":472,"title":{},"body":{"injectables/BidsService.html":{}}}],["winningbid",{"_index":267,"title":{},"body":{"injectables/AuctionsService.html":{},"injectables/BidsGateway.html":{}}}],["winston",{"_index":510,"title":{},"body":{"injectables/CustomLoggerService.html":{},"dependencies.html":{}}}],["winston.config",{"_index":512,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["winston.format.combine",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.ms",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.transports.console",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonconfig",{"_index":511,"title":{},"body":{"injectables/CustomLoggerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["working",{"_index":898,"title":{},"body":{"index.html":{}}}],["x",{"_index":928,"title":{},"body":{"index.html":{}}}],["yes",{"_index":498,"title":{},"body":{"injectables/CustomLoggerService.html":{}}}],["you'd",{"_index":942,"title":{},"body":{"index.html":{}}}],["you're",{"_index":858,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuctionsModule.html":{},"modules/BidsModule.html":{},"modules/UsersModule.html":{},"modules/WebsocketsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('v1')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuctionsModule\n\nAuctionsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuctionsModule->AppModule\n\n\n\n\n\nBidsModule\n\nBidsModule\n\nAppModule -->\n\nBidsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nWebsocketsModule\n\nWebsocketsModule\n\nAppModule -->\n\nWebsocketsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuctionsModule\n                        \n                        \n                            BidsModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            WebsocketsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UsersModule } from './users/users.module';\nimport { AuctionsModule } from './auctions/auctions.module';\nimport { BidsModule } from './bids/bids.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { WebsocketsModule } from './websockets/websockets.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true, envFilePath: '.env' }),\n    TypeOrmModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        type: 'postgres',\n        url: configService.get('DB_URL'),\n        synchronize: false,\n        logging: true,\n        autoLoadEntities: true,\n      }),\n    }),\n    JwtModule.registerAsync({\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('SECRET'),\n        signOptions: { expiresIn: '24h' },\n      }),\n    }),\n    UsersModule,\n    AuctionsModule,\n    BidsModule,\n    WebsocketsModule,\n  ],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Auction.html":{"url":"entities/Auction.html","title":"entity - Auction","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Auction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auctions/entities/auction.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                currentPrice\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                seller\n                            \n                            \n                                    \n                                startingPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currentPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/entities/auction.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/entities/auction.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/entities/auction.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : createId()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar', {length: 32})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/entities/auction.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/entities/auction.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        seller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/entities/auction.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startingPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/entities/auction.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryColumn, ManyToOne } from 'typeorm';\nimport { User } from '../../users/entities/user.entity';\nimport { createId } from '@paralleldrive/cuid2';\n\n@Entity()\nexport class Auction {\n  @PrimaryColumn('varchar', { length: 32 })\n  id: string = createId();\n\n  @Column()\n  name: string;\n\n  @Column()\n  description: string;\n\n  @Column()\n  startingPrice: number;\n\n  @Column()\n  currentPrice: number;\n\n  @Column()\n  endDate: Date;\n\n  @ManyToOne(() => User, (user) => user.id)\n  seller: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuctionFiltersDto.html":{"url":"classes/AuctionFiltersDto.html","title":"class - AuctionFiltersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuctionFiltersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auctions/dto/auction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                maxPrice\n                            \n                            \n                                    \n                                    \n                                minPrice\n                            \n                            \n                                    \n                                searchTerm\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/dto/auction.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        maxPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/dto/auction.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        minPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/dto/auction.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/dto/auction.dto.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNumber,\n  IsDate,\n  IsBoolean,\n  IsOptional,\n} from 'class-validator';\n\nexport class CreateAuctionDto {\n  @ApiProperty({\n    example: 'Auction 1',\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    example: 'Description',\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  startingPrice: number;\n\n  @IsNumber()\n  currentPrice: number;\n\n  @ApiProperty({\n    example: new Date(Date.now() + 24 * 3600 * 1000).toISOString(),\n  })\n  @IsDate()\n  endDate: Date;\n}\n\nexport class AuctionFiltersDto {\n  @IsOptional()\n  @IsNumber()\n  minPrice: number;\n\n  @IsOptional()\n  @IsNumber()\n  maxPrice: number;\n\n  @IsOptional()\n  searchTerm: string;\n\n  @IsOptional()\n  @IsBoolean()\n  active: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuctionsController.html":{"url":"controllers/AuctionsController.html","title":"controller - AuctionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuctionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auctions/auctions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auctions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                createAuction\n                            \n                            \n                                    \n                                getAuction\n                            \n                            \n                                    \n                                    \n                                    \n                                listAuctions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createAuction\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAuction(dto: CreateAuctionDto, userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')@UseGuards(JwtAuthGuard)@ApiBearerAuth()\n                \n            \n\n                    \n                        \n                            Defined in src/auctions/auctions.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateAuctionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAuction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuction(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/auctions/auctions.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        listAuctions\n                        \n                    \n                \n            \n            \n                \n                        \n                    listAuctions(filters: AuctionFiltersDto, page: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiQuery({name: 'page', type: Number, required: true, example: 1})@ApiQuery({name: 'limit', type: Number, required: true, example: 10})\n                \n            \n\n                    \n                        \n                            Defined in src/auctions/auctions.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                            AuctionFiltersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    5\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Query,\n  UseGuards,\n  DefaultValuePipe,\n  ParseIntPipe,\n} from '@nestjs/common';\nimport { AuctionsService } from './auctions.service';\nimport { CreateAuctionDto, AuctionFiltersDto } from './dto/auction.dto';\nimport { JwtAuthGuard } from '../users/guards/jwt-auth.guard';\nimport { GetUser } from '../users/decorators/get-user.decorator';\nimport { ApiBearerAuth, ApiQuery } from '@nestjs/swagger';\nimport { Pagination } from 'nestjs-typeorm-paginate';\nimport { Auction } from './entities/auction.entity';\n\n@Controller('auctions')\nexport class AuctionsController {\n  constructor(private auctionsService: AuctionsService) {}\n\n  @Post('create')\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  createAuction(@Body() dto: CreateAuctionDto, @GetUser('id') userId: string) {\n    return this.auctionsService.createAuction(dto, userId);\n  }\n\n  @Get(':id')\n  getAuction(@Param('id') id: string) {\n    return this.auctionsService.getAuctionById(id);\n  }\n\n  @Get()\n  @ApiQuery({ name: 'page', type: Number, required: true, example: 1 })\n  @ApiQuery({ name: 'limit', type: Number, required: true, example: 10 })\n  listAuctions(\n    @Query() filters: AuctionFiltersDto,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number = 1,\n    @Query('limit', new DefaultValuePipe(5), ParseIntPipe) limit: number = 5,\n  ): Promise> {\n    return this.auctionsService.listAuctions(filters, {\n      page: page,\n      limit: limit,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuctionsModule.html":{"url":"modules/AuctionsModule.html","title":"module - AuctionsModule","body":"\n                   \n\n\n\n\n    Modules\n    AuctionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuctionsModule\n\n\n\ncluster_AuctionsModule_imports\n\n\n\ncluster_AuctionsModule_exports\n\n\n\ncluster_AuctionsModule_providers\n\n\n\n\nWebsocketsModule\n\nWebsocketsModule\n\n\n\nAuctionsModule\n\nAuctionsModule\n\nAuctionsModule -->\n\nWebsocketsModule->AuctionsModule\n\n\n\n\n\nAuctionsService \n\nAuctionsService \n\nAuctionsService  -->\n\nAuctionsModule->AuctionsService \n\n\n\n\n\nAuctionsService\n\nAuctionsService\n\nAuctionsModule -->\n\nAuctionsService->AuctionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auctions/auctions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuctionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuctionsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WebsocketsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuctionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AuctionsController } from './auctions.controller';\nimport { AuctionsService } from './auctions.service';\nimport { Auction } from './entities/auction.entity';\nimport { User } from '../users/entities/user.entity';\nimport { WebsocketsModule } from '../websockets/websockets.module';\nimport { BidsModule } from '../bids/bids.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Auction, User]),\n    WebsocketsModule,\n    forwardRef(() => BidsModule),\n  ],\n  controllers: [AuctionsController],\n  providers: [AuctionsService],\n  exports: [AuctionsService],\n})\nexport class AuctionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuctionsService.html":{"url":"injectables/AuctionsService.html","title":"injectable - AuctionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuctionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auctions/auctions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAuction\n                            \n                            \n                                    Async\n                                endAuction\n                            \n                            \n                                    Async\n                                getAuctionById\n                            \n                            \n                                    Async\n                                listAuctions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auctionRepository: Repository, bidsService: BidsService, bidsGateway: BidsGateway)\n                    \n                \n                        \n                            \n                                Defined in src/auctions/auctions.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auctionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bidsService\n                                                  \n                                                        \n                                                                        BidsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bidsGateway\n                                                  \n                                                        \n                                                                        BidsGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createAuction\n                        \n                    \n                \n            \n            \n                \n                        \n                    createAuction(dto: CreateAuctionDto, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auctions/auctions.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateAuctionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        endAuction\n                        \n                    \n                \n            \n            \n                \n                        \n                    endAuction(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auctions/auctions.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAuctionById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAuctionById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auctions/auctions.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        listAuctions\n                        \n                    \n                \n            \n            \n                \n                        \n                    listAuctions(filters: AuctionFiltersDto, options: IPaginationOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auctions/auctions.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                            AuctionFiltersDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        IPaginationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport {\n  IPaginationOptions,\n  paginate,\n  Pagination,\n} from 'nestjs-typeorm-paginate';\nimport { Auction } from './entities/auction.entity';\nimport { CreateAuctionDto, AuctionFiltersDto } from './dto/auction.dto';\nimport { BidsGateway } from '../websockets/bids.gateway';\nimport { BidsService } from '../bids/bids.service';\nimport { Bid } from '../bids/entities/bid.entity';\n\n@Injectable()\nexport class AuctionsService {\n  constructor(\n    @InjectRepository(Auction) private auctionRepository: Repository,\n    private bidsService: BidsService,\n    private bidsGateway: BidsGateway,\n  ) {}\n\n  async createAuction(dto: CreateAuctionDto, userId: string): Promise {\n    const auction = this.auctionRepository.create({\n      ...dto,\n      currentPrice: dto.startingPrice,\n      seller: { id: userId },\n    });\n    return this.auctionRepository.save(auction);\n  }\n\n  async getAuctionById(id: string): Promise {\n    const auction = await this.auctionRepository.findOne({\n      where: { id },\n      relations: ['seller'],\n    });\n    if (!auction) {\n      throw new NotFoundException('Auction not found');\n    }\n    return auction;\n  }\n\n  async listAuctions(\n    filters: AuctionFiltersDto,\n    options: IPaginationOptions,\n  ): Promise> {\n    const queryBuilder = this.auctionRepository.createQueryBuilder('auction');\n\n    if (filters.minPrice) {\n      queryBuilder.andWhere('auction.currentPrice >= :minPrice', {\n        minPrice: filters.minPrice,\n      });\n    }\n    if (filters.maxPrice) {\n      queryBuilder.andWhere('auction.currentPrice = :now', { now: new Date() });\n      } else {\n        queryBuilder.andWhere('auction.endDate (queryBuilder, options);\n  }\n\n  async endAuction(id: string): Promise {\n    const auction = await this.getAuctionById(id);\n    const endDate = new Date();\n    await this.auctionRepository.update(auction, { endDate: endDate });\n\n    const winningBid = await this.bidsService.getHighestBidsForAuction(id);\n    await this.bidsGateway.notifyAuctionEnd(id, winningBid);\n\n    return winningBid;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Bid.html":{"url":"entities/Bid.html","title":"entity - Bid","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Bid\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bids/entities/bid.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                auction\n                            \n                            \n                                    \n                                bidder\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                placedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bids/entities/bid.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        auction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Auction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, auction => auction.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bids/entities/bid.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bidder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.id)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bids/entities/bid.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : createId()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar', {length: 32})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bids/entities/bid.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        placedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bids/entities/bid.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryColumn, ManyToOne } from 'typeorm';\nimport { User } from '../../users/entities/user.entity';\nimport { Auction } from '../../auctions/entities/auction.entity';\nimport { createId } from '@paralleldrive/cuid2';\n\n@Entity()\nexport class Bid {\n  @PrimaryColumn('varchar', { length: 32 })\n  id: string = createId();\n\n  @Column()\n  amount: number;\n\n  @Column()\n  placedAt: Date;\n\n  @ManyToOne(() => Auction, (auction) => auction.id)\n  auction: Auction;\n\n  @ManyToOne(() => User, (user) => user.id)\n  bidder: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BidsController.html":{"url":"controllers/BidsController.html","title":"controller - BidsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BidsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bids/bids.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                bids\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getBidsForAuction\n                            \n                            \n                                    \n                                    \n                                    \n                                getBidsForUser\n                            \n                            \n                                    \n                                    \n                                    \n                                placeBid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getBidsForAuction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBidsForAuction(auctionId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':auctionId')@ApiQuery({name: 'page', type: Number, required: true, example: 1})@ApiQuery({name: 'limit', type: Number, required: true, example: 10})\n                \n            \n\n                    \n                        \n                            Defined in src/bids/bids.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auctionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getBidsForUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBidsForUser(userId: string, paginationOptions: PaginationOptionsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('history/:userId')@ApiQuery({name: 'page', type: Number, required: true, example: 1})@ApiQuery({name: 'limit', type: Number, required: true, example: 10})\n                \n            \n\n                    \n                        \n                            Defined in src/bids/bids.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                paginationOptions\n                                            \n                                                            PaginationOptionsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        placeBid\n                        \n                    \n                \n            \n            \n                \n                        \n                    placeBid(dto: PlaceBidDto, userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('place')@UseGuards(JwtAuthGuard)@ApiBearerAuth()\n                \n            \n\n                    \n                        \n                            Defined in src/bids/bids.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            PlaceBidDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Get,\n  Body,\n  Param,\n  UseGuards,\n  Query,\n} from '@nestjs/common';\nimport { BidsService } from './bids.service';\nimport { PlaceBidDto } from './dto/bid.dto';\nimport { JwtAuthGuard } from '../users/guards/jwt-auth.guard';\nimport { GetUser } from '../users/decorators/get-user.decorator';\nimport { ApiBearerAuth, ApiQuery } from '@nestjs/swagger';\nimport { PaginationOptionsDto } from 'src/pagination/pagination.dto';\n\n@Controller('bids')\nexport class BidsController {\n  constructor(private bidService: BidsService) {}\n\n  @Post('place')\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  placeBid(@Body() dto: PlaceBidDto, @GetUser('id') userId: string) {\n    return this.bidService.placeBid(dto, userId);\n  }\n\n  @Get(':auctionId')\n  @ApiQuery({ name: 'page', type: Number, required: true, example: 1 })\n  @ApiQuery({ name: 'limit', type: Number, required: true, example: 10 })\n  getBidsForAuction(@Param('auctionId') auctionId: string) {\n    return this.bidService.getBidsForAuction(auctionId);\n  }\n\n  @Get('history/:userId')\n  @ApiQuery({ name: 'page', type: Number, required: true, example: 1 })\n  @ApiQuery({ name: 'limit', type: Number, required: true, example: 10 })\n  getBidsForUser(\n    @Param('userId') userId: string,\n    @Query() paginationOptions: PaginationOptionsDto,\n  ) {\n    return this.bidService.getBidsForUser(userId, paginationOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BidsGateway.html":{"url":"injectables/BidsGateway.html","title":"injectable - BidsGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BidsGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/websockets/bids.gateway.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                auctionSubscriptions\n                            \n                            \n                                    Private\n                                connectedClients\n                            \n                            \n                                    \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterInit\n                            \n                            \n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                    \n                                    Async\n                                handleSubscription\n                            \n                            \n                                    \n                                    Async\n                                handleUnsubscription\n                            \n                            \n                                    Private\n                                logState\n                            \n                            \n                                    Async\n                                notifyAuctionEnd\n                            \n                            \n                                    Async\n                                notifyPriceUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: CustomLoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/websockets/bids.gateway.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        CustomLoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterInit\n                        \n                    \n                \n            \n            \n                \nafterInit(server: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/websockets/bids.gateway.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                server\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleConnection\n                        \n                    \n                \n            \n            \n                \nhandleConnection(client: Socket)\n                \n            \n\n\n                    \n                        \n                            Defined in src/websockets/bids.gateway.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(client: Socket)\n                \n            \n\n\n                    \n                        \n                            Defined in src/websockets/bids.gateway.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleSubscription\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSubscription(client: Socket, auctionId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('subscribeToAuction')\n                \n            \n\n                    \n                        \n                            Defined in src/websockets/bids.gateway.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                auctionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        handleUnsubscription\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleUnsubscription(client: Socket, auctionId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('unsubscribeFromAuction')\n                \n            \n\n                    \n                        \n                            Defined in src/websockets/bids.gateway.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                client\n                                            \n                                                        Socket\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                auctionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logState\n                        \n                    \n                \n            \n            \n                \n                        \n                    logState(action: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/websockets/bids.gateway.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        notifyAuctionEnd\n                        \n                    \n                \n            \n            \n                \n                        \n                    notifyAuctionEnd(auctionId: string, winningBid: Bid)\n                \n            \n\n\n                    \n                        \n                            Defined in src/websockets/bids.gateway.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auctionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                winningBid\n                                            \n                                                            Bid\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        notifyPriceUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    notifyPriceUpdate(auctionId: string, newPrice: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/websockets/bids.gateway.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auctionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPrice\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auctionSubscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/websockets/bids.gateway.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        connectedClients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/websockets/bids.gateway.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/websockets/bids.gateway.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  WebSocketGateway,\n  WebSocketServer,\n  SubscribeMessage,\n  ConnectedSocket,\n  OnGatewayConnection,\n  OnGatewayDisconnect,\n  MessageBody,\n  OnGatewayInit,\n} from '@nestjs/websockets';\nimport { Server, Socket } from 'socket.io';\nimport { Injectable } from '@nestjs/common';\nimport { CustomLoggerService } from '../logger/logger.service';\nimport { Bid } from '../bids/entities/bid.entity';\n\n@Injectable()\n@WebSocketGateway({\n  cors: {\n    origin: '*',\n  },\n})\nexport class BidsGateway\n  implements OnGatewayConnection, OnGatewayDisconnect, OnGatewayInit\n{\n  @WebSocketServer()\n  server: Server;\n\n  constructor(private readonly logger: CustomLoggerService) {}\n\n  private auctionSubscriptions: Map> = new Map();\n  private connectedClients: Set = new Set();\n\n  private logState(action: string) {\n    const context = {\n      action,\n      connectedClientsCount: this.connectedClients.size,\n      connectedClientIds: Array.from(this.connectedClients),\n      auctionSubscriptions: Array.from(this.auctionSubscriptions.entries()).map(\n        ([auctionId, subscribers]) => ({\n          auctionId,\n          subscribersCount: subscribers.size,\n          subscriberIds: Array.from(subscribers),\n        }),\n      ),\n    };\n    this.logger.log(JSON.stringify(context), 'WEBSOCKET');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  afterInit(server: any) {\n    this.logger.log('Sockets init', 'WEBSOCKET');\n  }\n\n  handleConnection(client: Socket) {\n    this.connectedClients.add(client.id);\n    this.logger.log(`\\n👥 New client connected: ${client.id}`);\n    this.logState('New Connection');\n  }\n\n  handleDisconnect(client: Socket) {\n    this.logger.log(`\\n❌ Client disconnected: ${client.id}`);\n    this.connectedClients.delete(client.id);\n\n    this.auctionSubscriptions.forEach((subscribers, auctionId) => {\n      if (subscribers.has(client.id)) {\n        subscribers.delete(client.id);\n        client.leave(`auction:${auctionId}`);\n        this.logger.log(\n          `Removed client ${client.id} from auction ${auctionId}`,\n        );\n      }\n    });\n\n    for (const [\n      auctionId,\n      subscribers,\n    ] of this.auctionSubscriptions.entries()) {\n      if (subscribers.size === 0) {\n        this.auctionSubscriptions.delete(auctionId);\n        this.logger.log(\n          `Removed empty auction ${auctionId} from subscriptions`,\n        );\n      }\n    }\n\n    this.logState('Disconnection');\n  }\n\n  @SubscribeMessage('subscribeToAuction')\n  async handleSubscription(\n    @ConnectedSocket() client: Socket,\n    @MessageBody() auctionId: string,\n  ) {\n    this.logger.log(\n      `\\n📝 Subscription request from client ${client.id} to auction ${auctionId}`,\n    );\n\n    if (!this.auctionSubscriptions.has(auctionId)) {\n      this.logger.log(`Creating new subscription set for auction ${auctionId}`);\n      this.auctionSubscriptions.set(auctionId, new Set());\n    }\n\n    this.auctionSubscriptions.get(auctionId).add(client.id);\n    await client.join(`auction:${auctionId}`);\n\n    this.logState('New Subscription');\n\n    return { success: true, message: `Subscribed to auction ${auctionId}` };\n  }\n\n  @SubscribeMessage('unsubscribeFromAuction')\n  async handleUnsubscription(\n    @ConnectedSocket() client: Socket,\n    @MessageBody() auctionId: string,\n  ) {\n    this.logger.log(\n      `\\n🚫 Unsubscription request from client ${client.id} from auction ${auctionId}`,\n    );\n\n    if (this.auctionSubscriptions.has(auctionId)) {\n      this.auctionSubscriptions.get(auctionId).delete(client.id);\n      this.logger.log(\n        `Removed client ${client.id} from auction ${auctionId} subscribers`,\n      );\n\n      if (this.auctionSubscriptions.get(auctionId).size === 0) {\n        this.auctionSubscriptions.delete(auctionId);\n        this.logger.log(\n          `Removed empty auction ${auctionId} from subscriptions`,\n        );\n      }\n    }\n\n    await client.leave(`auction:${auctionId}`);\n\n    this.logState('Unsubscription');\n\n    return { success: true, message: `Unsubscribed from auction ${auctionId}` };\n  }\n\n  async notifyPriceUpdate(auctionId: string, newPrice: number) {\n    this.logger.log(`\\n💰 Sending price update for auction ${auctionId}`);\n    this.logger.log(`New price: ${newPrice}`);\n    this.logger.log(\n      `Number of subscribers: ${this.auctionSubscriptions.get(auctionId)?.size || 0}`,\n    );\n\n    this.server.to(`auction:${auctionId}`).emit('priceUpdate', {\n      auctionId,\n      newPrice,\n      timestamp: new Date(),\n    });\n\n    this.logState('Price Update Notification');\n  }\n\n  async notifyAuctionEnd(auctionId: string, winningBid: Bid) {\n    this.logger.log(\n      `\\n🏁 Sending auction end notification for auction ${auctionId}`,\n    );\n    this.logger.log(`Winning bid: ${JSON.stringify(winningBid)}`);\n    this.logger.log(\n      `Number of subscribers: ${this.auctionSubscriptions.get(auctionId)?.size || 0}`,\n    );\n\n    this.server.to(`auction:${auctionId}`).emit('auctionEnd', {\n      auctionId,\n      winningBid,\n      timestamp: new Date(),\n    });\n\n    this.logState('Auction End Notification');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BidsModule.html":{"url":"modules/BidsModule.html","title":"module - BidsModule","body":"\n                   \n\n\n\n\n    Modules\n    BidsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BidsModule\n\n\n\ncluster_BidsModule_exports\n\n\n\ncluster_BidsModule_providers\n\n\n\ncluster_BidsModule_imports\n\n\n\n\nWebsocketsModule\n\nWebsocketsModule\n\n\n\nBidsModule\n\nBidsModule\n\nBidsModule -->\n\nWebsocketsModule->BidsModule\n\n\n\n\n\nBidsService \n\nBidsService \n\nBidsService  -->\n\nBidsModule->BidsService \n\n\n\n\n\nBidsService\n\nBidsService\n\nBidsModule -->\n\nBidsService->BidsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/bids/bids.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BidsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BidsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            WebsocketsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BidsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { BidsController } from './bids.controller';\nimport { BidsService } from './bids.service';\nimport { Bid } from './entities/bid.entity';\nimport { AuctionsModule } from '../auctions/auctions.module';\nimport { WebsocketsModule } from '../websockets/websockets.module';\nimport { Auction } from '../auctions/entities/auction.entity';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Bid, Auction]),\n    WebsocketsModule,\n    forwardRef(() => AuctionsModule),\n  ],\n  controllers: [BidsController],\n  providers: [BidsService],\n  exports: [BidsService],\n})\nexport class BidsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BidsService.html":{"url":"injectables/BidsService.html","title":"injectable - BidsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BidsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bids/bids.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBidsForAuction\n                            \n                            \n                                    Async\n                                getBidsForUser\n                            \n                            \n                                    Async\n                                getHighestBidsForAuction\n                            \n                            \n                                    Async\n                                placeBid\n                            \n                            \n                                    Private\n                                    Async\n                                validateAuction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bidRepository: Repository, auctionRepository: Repository, bidsGateway: BidsGateway)\n                    \n                \n                        \n                            \n                                Defined in src/bids/bids.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bidRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auctionRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bidsGateway\n                                                  \n                                                        \n                                                                        BidsGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBidsForAuction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBidsForAuction(auctionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bids/bids.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auctionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getBidsForUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getBidsForUser(userId: string, options: IPaginationOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bids/bids.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                        IPaginationOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getHighestBidsForAuction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHighestBidsForAuction(auctionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bids/bids.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auctionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        placeBid\n                        \n                    \n                \n            \n            \n                \n                        \n                    placeBid(dto: PlaceBidDto, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bids/bids.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            PlaceBidDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        validateAuction\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAuction(auctionId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/bids/bids.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                auctionId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  BadRequestException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Bid } from './entities/bid.entity';\nimport { PlaceBidDto } from './dto/bid.dto';\nimport { createId } from '@paralleldrive/cuid2';\nimport { Auction } from '../auctions/entities/auction.entity';\nimport { BidsGateway } from '../websockets/bids.gateway';\nimport {\n  IPaginationOptions,\n  paginate,\n  Pagination,\n} from 'nestjs-typeorm-paginate';\n\n@Injectable()\nexport class BidsService {\n  constructor(\n    @InjectRepository(Bid) private readonly bidRepository: Repository,\n    @InjectRepository(Auction)\n    private readonly auctionRepository: Repository,\n    private readonly bidsGateway: BidsGateway,\n  ) {}\n\n  private async validateAuction(auctionId: string): Promise {\n    const auction = await this.auctionRepository.findOne({\n      where: { id: auctionId },\n      relations: ['seller'],\n    });\n    if (!auction) {\n      throw new NotFoundException('Auction not found');\n    }\n    return auction;\n  }\n\n  async placeBid(dto: PlaceBidDto, userId: string): Promise {\n    const auction = await this.validateAuction(dto.auctionId);\n\n    if (auction.endDate > {\n    const queryBuilder = this.bidRepository\n      .createQueryBuilder('bid')\n      .where('bid.bidderId = :userId', { userId })\n      .orderBy('bid.placedAt', 'DESC');\n\n    return paginate(queryBuilder, options);\n  }\n\n  async getBidsForAuction(auctionId: string): Promise {\n    return this.bidRepository.find({\n      where: { auction: { id: auctionId } },\n      relations: ['bidder'],\n      order: { amount: 'DESC' },\n    });\n  }\n\n  async getHighestBidsForAuction(auctionId: string): Promise {\n    return this.bidRepository.findOne({\n      where: { auction: { id: auctionId } },\n      relations: ['bidder'],\n      order: { amount: 'DESC' },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAuctionDto.html":{"url":"classes/CreateAuctionDto.html","title":"class - CreateAuctionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAuctionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auctions/dto/auction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                currentPrice\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                startingPrice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currentPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/dto/auction.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Description'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/dto/auction.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined})@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/dto/auction.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Auction 1'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/dto/auction.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        startingPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auctions/dto/auction.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsString,\n  IsNumber,\n  IsDate,\n  IsBoolean,\n  IsOptional,\n} from 'class-validator';\n\nexport class CreateAuctionDto {\n  @ApiProperty({\n    example: 'Auction 1',\n  })\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    example: 'Description',\n  })\n  @IsString()\n  description: string;\n\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  startingPrice: number;\n\n  @IsNumber()\n  currentPrice: number;\n\n  @ApiProperty({\n    example: new Date(Date.now() + 24 * 3600 * 1000).toISOString(),\n  })\n  @IsDate()\n  endDate: Date;\n}\n\nexport class AuctionFiltersDto {\n  @IsOptional()\n  @IsNumber()\n  minPrice: number;\n\n  @IsOptional()\n  @IsNumber()\n  maxPrice: number;\n\n  @IsOptional()\n  searchTerm: string;\n\n  @IsOptional()\n  @IsBoolean()\n  active: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomLoggerService.html":{"url":"injectables/CustomLoggerService.html","title":"injectable - CustomLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logger/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/logger/logger.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: string, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/logger/logger.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace?: string, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/logger/logger.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                trace\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/logger/logger.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: string, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/logger/logger.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: string, context?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/logger/logger.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/logger/logger.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, LoggerService } from '@nestjs/common';\nimport { createLogger, Logger } from 'winston';\nimport { winstonConfig } from './winston.config';\n\n@Injectable()\nexport class CustomLoggerService implements LoggerService {\n  private logger: Logger;\n\n  constructor() {\n    this.logger = createLogger(winstonConfig);\n  }\n\n  log(message: string, context?: string) {\n    this.logger.info(message, { context });\n  }\n\n  error(message: string, trace?: string, context?: string) {\n    this.logger.error(message, { trace, context });\n  }\n\n  warn(message: string, context?: string) {\n    this.logger.warn(message, { context });\n  }\n\n  debug(message: string, context?: string) {\n    this.logger.debug(message, { context });\n  }\n\n  verbose(message: string, context?: string) {\n    this.logger.verbose(message, { context });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitialMigration1732649684452.html":{"url":"classes/InitialMigration1732649684452.html","title":"class - InitialMigration1732649684452","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitialMigration1732649684452\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1732649684452-InitialMigration.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'InitialMigration1732649684452'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1732649684452-InitialMigration.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1732649684452-InitialMigration.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1732649684452-InitialMigration.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class InitialMigration1732649684452 implements MigrationInterface {\n  name = 'InitialMigration1732649684452';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"user\" (\"id\" character varying(32) NOT NULL, \"username\" character varying NOT NULL, \"email\" character varying NOT NULL, \"password\" character varying NOT NULL, \"createdAt\" TIMESTAMP NOT NULL, CONSTRAINT \"PK_cace4a159ff9f2512dd42373760\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"auction\" (\"id\" character varying(32) NOT NULL, \"name\" character varying NOT NULL, \"description\" character varying NOT NULL, \"startingPrice\" integer NOT NULL, \"currentPrice\" integer NOT NULL, \"endDate\" TIMESTAMP NOT NULL, \"sellerId\" character varying(32), CONSTRAINT \"PK_9dc876c629273e71646cf6dfa67\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"bid\" (\"id\" character varying(32) NOT NULL, \"amount\" integer NOT NULL, \"auctionId\" character varying(32), \"bidderId\" character varying(32), CONSTRAINT \"PK_ed405dda320051aca2dcb1a50bb\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"auction\" ADD CONSTRAINT \"FK_a8985d3662c274c57c2d0118538\" FOREIGN KEY (\"sellerId\") REFERENCES \"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"bid\" ADD CONSTRAINT \"FK_2e00b0f268f93abcf693bb682c6\" FOREIGN KEY (\"auctionId\") REFERENCES \"auction\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"bid\" ADD CONSTRAINT \"FK_1345c9f3ee0789dcff101f6c79b\" FOREIGN KEY (\"bidderId\") REFERENCES \"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"bid\" DROP CONSTRAINT \"FK_1345c9f3ee0789dcff101f6c79b\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"bid\" DROP CONSTRAINT \"FK_2e00b0f268f93abcf693bb682c6\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"auction\" DROP CONSTRAINT \"FK_a8985d3662c274c57c2d0118538\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"bid\"`);\n    await queryRunner.query(`DROP TABLE \"auction\"`);\n    await queryRunner.query(`DROP TABLE \"user\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/guards/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/guards/jwt-auth.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any, info: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/guards/jwt-auth.guard.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  ExecutionContext,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest();\n\n    const authHeader = request.headers['authorization'];\n    if (!authHeader) {\n      throw new UnauthorizedException('Authorization header not found');\n    }\n\n    const token = authHeader.split(' ')[1];\n    if (!token) {\n      throw new UnauthorizedException(\n        'Token not found in Authorization header',\n      );\n    }\n\n    request.headers['authorization'] = `Bearer ${token}`;\n\n    return super.canActivate(context);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  handleRequest(err: any, user: any, info: any) {\n    if (err || !user) {\n      throw err || new UnauthorizedException('Authentication required');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/stategies/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/users/stategies/jwt.strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/stategies/jwt.strategy.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../entities/user.entity';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    configService: ConfigService,\n    @InjectRepository(User)\n    private userRepository: Repository,\n  ) {\n    super({\n      jwtFromRequest: (req) => {\n        const authHeader = req.headers['authorization'];\n        if (!authHeader) return null;\n\n        const token = authHeader.split(' ')[1];\n        return token || null;\n      },\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: any) {\n    const { sub: id } = payload;\n    const user = await this.userRepository.findOne({ where: { id } });\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user1@mail.ru'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'pswd1234'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class RegisterUserDto {\n  @ApiProperty({\n    example: 'user1',\n  })\n  @IsString()\n  username: string;\n\n  @ApiProperty({\n    example: 'user1@mail.ru',\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    example: 'pswd1234',\n  })\n  @IsString()\n  password: string;\n}\n\nexport class LoginUserDto {\n  @ApiProperty({\n    example: 'user1@mail.ru',\n  })\n  @IsString()\n  email: string;\n\n  @ApiProperty({\n    example: 'pswd1234',\n  })\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migrations1733386120063.html":{"url":"classes/Migrations1733386120063.html","title":"class - Migrations1733386120063","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migrations1733386120063\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1733386120063-migrations.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Migrations1733386120063'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1733386120063-migrations.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1733386120063-migrations.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in src/migrations/1733386120063-migrations.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Migrations1733386120063 implements MigrationInterface {\n  name = 'Migrations1733386120063';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"bid\" ADD \"placedAt\" TIMESTAMP`);\n\n    await queryRunner.query(`UPDATE \"bid\" SET \"placedAt\" = NOW()`);\n\n    await queryRunner.query(\n      `ALTER TABLE \"bid\" ALTER COLUMN \"placedAt\" SET NOT NULL`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"bid\" DROP COLUMN \"placedAt\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationOptionsDto.html":{"url":"classes/PaginationOptionsDto.html","title":"class - PaginationOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pagination/pagination.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Type(undefined)@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/pagination.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()@Type(undefined)@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/pagination/pagination.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport { IsInt, Min } from 'class-validator';\n\nexport class PaginationOptionsDto {\n  @IsInt()\n  @Type(() => Number)\n  @Min(1)\n  page: number;\n\n  @IsInt()\n  @Type(() => Number)\n  @Min(1)\n  limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlaceBidDto.html":{"url":"classes/PlaceBidDto.html","title":"class - PlaceBidDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlaceBidDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bids/dto/bid.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                auctionId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bids/dto/bid.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        auctionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'jpbnop2tgyxp3vt5d4fyz2r4'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bids/dto/bid.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\n\nexport class PlaceBidDto {\n  @ApiProperty({\n    example: 100,\n  })\n  @IsNumber()\n  amount: number;\n\n  @ApiProperty({\n    example: 'jpbnop2tgyxp3vt5d4fyz2r4',\n  })\n  @IsString()\n  auctionId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user1@mail.ru'})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'pswd1234'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user1'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class RegisterUserDto {\n  @ApiProperty({\n    example: 'user1',\n  })\n  @IsString()\n  username: string;\n\n  @ApiProperty({\n    example: 'user1@mail.ru',\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    example: 'pswd1234',\n  })\n  @IsString()\n  password: string;\n}\n\nexport class LoginUserDto {\n  @ApiProperty({\n    example: 'user1@mail.ru',\n  })\n  @IsString()\n  email: string;\n\n  @ApiProperty({\n    example: 'pswd1234',\n  })\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : createId()\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn('varchar', {length: 32})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { createId } from '@paralleldrive/cuid2';\nimport { Entity, Column, PrimaryColumn } from 'typeorm';\n\n@Entity()\nexport class User {\n  @PrimaryColumn('varchar', { length: 32 })\n  id: string = createId();\n\n  @Column()\n  username: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  password: string;\n\n  @Column()\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getProfile\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@Get('me')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@ApiBearerAuth()@Post('logout')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(dto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Body,\n  Request,\n  Get,\n  UseGuards,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { RegisterUserDto, LoginUserDto } from './dto/user.dto';\nimport { JwtAuthGuard } from '../users/guards/jwt-auth.guard';\nimport { ApiBearerAuth } from '@nestjs/swagger';\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post('register')\n  async register(@Body() dto: RegisterUserDto) {\n    return this.usersService.register(dto);\n  }\n\n  // @Get('verify-email')\n  // async verifyEmail(@Query('token') token: string) {\n  //   return this.usersService.verifyEmail(token);\n  // }\n\n  @Post('login')\n  async login(@Body() dto: LoginUserDto) {\n    const token = await this.usersService.login(dto);\n    return token;\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @Get('me')\n  async getProfile(@Request() req) {\n    const user = await this.usersService.findById(req.user.sub);\n    delete user.password;\n    return user;\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @Post('logout')\n  async logout() {\n    return { message: 'Successfully logged out' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nJwtStrategy  -->\n\nUsersModule->JwtStrategy \n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { User } from './entities/user.entity';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { JwtStrategy } from './stategies/jwt.strategy';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    ConfigModule,\n    TypeOrmModule.forFeature([User]),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => {\n        const secret = configService.get('JWT_SECRET');\n        return {\n          secret,\n          signOptions: {\n            expiresIn: '24h',\n          },\n        };\n      },\n    }),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService, JwtStrategy],\n  exports: [JwtStrategy, PassportModule, UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(dto: LoginUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(response: Response>)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                        Response>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(dto: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcryptjs';\nimport { User } from './entities/user.entity';\nimport { RegisterUserDto, LoginUserDto } from './dto/user.dto';\nimport { Response } from 'express';\nimport { createId } from '@paralleldrive/cuid2';\n// import { MailService } from 'src/mail/mail.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n    private jwtService: JwtService,\n    // private mailService: MailService,\n  ) {}\n\n  async register(dto: RegisterUserDto): Promise {\n    const existingUser = await this.userRepository.findOne({\n      where: [{ email: dto.email }, { username: dto.username }],\n    });\n\n    if (existingUser) {\n      throw new UnauthorizedException(\n        'User with this email or username already exists',\n      );\n    }\n\n    const hashedPassword = await bcrypt.hash(dto.password, 10);\n\n    const user = this.userRepository.create({\n      id: createId(),\n      ...dto,\n      password: hashedPassword,\n      createdAt: new Date(),\n    });\n\n    // const savedUser = await this.userRepository.save(user);\n\n    // const token = this.jwtService.sign(\n    //   { email: user.email },\n    //   { secret: 'email-verification-secret', expiresIn: '1h' },\n    // );\n\n    // await this.mailService.sendVerificationEmail(user.email, token);\n\n    // return savedUser;\n    return this.userRepository.save(user);\n  }\n\n  // async verifyEmail(token: string): Promise {\n  //   try {\n  //     const decoded = this.jwtService.verify(token, {\n  //       secret: 'email-verification-secret',\n  //     });\n  //     const email = decoded.email;\n\n  //     const user = await this.userRepository.findOne({ where: { email } });\n  //     if (!user) {\n  //       throw new UnauthorizedException('Invalid token or user not found');\n  //     }\n\n  //     return `Email ${email} успешно подтвержден!`;\n  //   } catch (error) {\n  //     throw new BadRequestException('Неверный или истёкший токен');\n  //   }\n  // }\n\n  async login(dto: LoginUserDto): Promise {\n    const user = await this.userRepository.findOne({\n      where: { email: dto.email },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    const isPasswordValid = await bcrypt.compare(dto.password, user.password);\n    if (!isPasswordValid) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    const payload = { sub: user.id, email: user.email };\n    const token = this.jwtService.sign(payload);\n\n    return { token };\n  }\n\n  async findById(id: string): Promise {\n    const user = await this.userRepository.findOne({\n      where: { id },\n      select: {\n        id: true,\n        email: true,\n        username: true,\n        createdAt: true,\n      },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException('User not found');\n    }\n\n    return user;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async logout(response: Response>): Promise {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WebsocketsModule.html":{"url":"modules/WebsocketsModule.html","title":"module - WebsocketsModule","body":"\n                   \n\n\n\n\n    Modules\n    WebsocketsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WebsocketsModule\n\n\n\ncluster_WebsocketsModule_exports\n\n\n\ncluster_WebsocketsModule_providers\n\n\n\n\nBidsGateway \n\nBidsGateway \n\n\n\nWebsocketsModule\n\nWebsocketsModule\n\nBidsGateway  -->\n\nWebsocketsModule->BidsGateway \n\n\n\n\n\nBidsGateway\n\nBidsGateway\n\nWebsocketsModule -->\n\nBidsGateway->WebsocketsModule\n\n\n\n\n\nCustomLoggerService\n\nCustomLoggerService\n\nWebsocketsModule -->\n\nCustomLoggerService->WebsocketsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/websockets/websockets.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BidsGateway\n                        \n                        \n                            CustomLoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BidsGateway\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BidsGateway } from './bids.gateway';\nimport { CustomLoggerService } from '../logger/logger.service';\n\n@Module({\n  providers: [BidsGateway, CustomLoggerService],\n  exports: [BidsGateway],\n})\nexport class WebsocketsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auctions/auctions.controller.ts\n            \n            controller\n            AuctionsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auctions/auctions.service.ts\n            \n            injectable\n            AuctionsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auctions/dto/auction.dto.ts\n            \n            class\n            AuctionFiltersDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auctions/dto/auction.dto.ts\n            \n            class\n            CreateAuctionDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auctions/entities/auction.entity.ts\n            \n            entity\n            Auction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/bids/bids.controller.ts\n            \n            controller\n            BidsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/bids/bids.service.ts\n            \n            injectable\n            BidsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/bids/dto/bid.dto.ts\n            \n            class\n            PlaceBidDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/bids/entities/bid.entity.ts\n            \n            entity\n            Bid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/data-source.ts\n            \n            variable\n            AppDataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/logger/logger.service.ts\n            \n            injectable\n            CustomLoggerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/logger/winston.config.ts\n            \n            variable\n            logFormat\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/logger/winston.config.ts\n            \n            variable\n            winstonConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1732649684452-InitialMigration.ts\n            \n            class\n            InitialMigration1732649684452\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1733386120063-migrations.ts\n            \n            class\n            Migrations1733386120063\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/pagination/pagination.dto.ts\n            \n            class\n            PaginationOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/users/decorators/get-user.decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/stategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/websockets/bids.gateway.ts\n            \n            injectable\n            BidsGateway\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.4.13\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/platform-socket.io : ^10.4.11\n        \n            @nestjs/swagger : ^8.0.7\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            @nestjs/websockets : ^10.4.11\n        \n            @paralleldrive/cuid2 : github:paralleldrive/cuid2\n        \n            bcrypt : ^5.1.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.7\n        \n            dotenv : ^16.4.5\n        \n            mjml : ^1.3.4\n        \n            nest-winston : ^1.9.7\n        \n            nestjs-typeorm-paginate : ^4.0.4\n        \n            nodemailer : ^6.9.16\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.13.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            socket.io : ^4.8.1\n        \n            swagger-ui-express : ^5.0.1\n        \n            ts-node : ^10.9.2\n        \n            typeorm : ^0.3.20\n        \n            winston : ^3.17.0\n        \n            winston-daily-rotate-file : ^5.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuctionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BidsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WebsocketsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuctionsModule\n\n\n\ncluster_AuctionsModule_exports\n\n\n\ncluster_AuctionsModule_providers\n\n\n\ncluster_BidsModule\n\n\n\ncluster_BidsModule_exports\n\n\n\ncluster_BidsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_WebsocketsModule\n\n\n\ncluster_WebsocketsModule_exports\n\n\n\ncluster_WebsocketsModule_providers\n\n\n\n\nAuctionsModule\n\nAuctionsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuctionsModule->AppModule\n\n\n\n\n\nAuctionsService \n\nAuctionsService \n\nAuctionsService  -->\n\nAuctionsModule->AuctionsService \n\n\n\n\n\nBidsModule\n\nBidsModule\n\nAppModule -->\n\nBidsModule->AppModule\n\n\n\n\n\nBidsService \n\nBidsService \n\nBidsService  -->\n\nBidsModule->BidsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nUsersModule->JwtStrategy \n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nWebsocketsModule\n\nWebsocketsModule\n\nAuctionsModule -->\n\nWebsocketsModule->AuctionsModule\n\n\n\nBidsModule -->\n\nWebsocketsModule->BidsModule\n\n\n\nAppModule -->\n\nWebsocketsModule->AppModule\n\n\n\n\n\nBidsGateway \n\nBidsGateway \n\nBidsGateway  -->\n\nWebsocketsModule->BidsGateway \n\n\n\n\n\nAuctionsService\n\nAuctionsService\n\nAuctionsModule -->\n\nAuctionsService->AuctionsModule\n\n\n\n\n\nBidsService\n\nBidsService\n\nBidsModule -->\n\nBidsService->BidsModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nBidsGateway\n\nBidsGateway\n\nWebsocketsModule -->\n\nBidsGateway->WebsocketsModule\n\n\n\n\n\nCustomLoggerService\n\nCustomLoggerService\n\nWebsocketsModule -->\n\nCustomLoggerService->WebsocketsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppDataSource   (src/.../data-source.ts)\n                        \n                        \n                            GetUser   (src/.../get-user.decorator.ts)\n                        \n                        \n                            logFormat   (src/.../winston.config.ts)\n                        \n                        \n                            winstonConfig   (src/.../winston.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/data-source.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppDataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  type: 'postgres',\n  url: process.env.DB_URL,\n  synchronize: false,\n  logging: true,\n  entities: [__dirname + '/**/*.entity.{ts,js}'],\n  migrations: [__dirname + '/migrations/*.{ts,js}'],\n  migrationsTableName: 'migrations',\n})\n                    \n                \n\n\n        \n    \n\n    src/users/decorators/get-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string | undefined, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.user;\n\n    return data ? user?.[data] : user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/logger/winston.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        logFormat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston.format.combine(\n  winston.format.timestamp(),\n  winston.format.ms(),\n  nestWinstonModuleUtilities.format.nestLike('Bazaar', {\n    prettyPrint: true,\n    colors: true,\n  }),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        winstonConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  transports: [\n    new winston.transports.Console({\n      format: logFormat,\n    }),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
